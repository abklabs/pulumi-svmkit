# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'PrimorialEntryArgs',
    'PrimorialEntryArgsDict',
]

MYPY = False

if not MYPY:
    class PrimorialEntryArgsDict(TypedDict):
        lamports: pulumi.Input[str]
        pubkey: pulumi.Input[str]
elif False:
    PrimorialEntryArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class PrimorialEntryArgs:
    def __init__(__self__, *,
                 lamports: pulumi.Input[str],
                 pubkey: pulumi.Input[str]):
        pulumi.set(__self__, "lamports", lamports)
        pulumi.set(__self__, "pubkey", pubkey)

    @property
    @pulumi.getter
    def lamports(self) -> pulumi.Input[str]:
        return pulumi.get(self, "lamports")

    @lamports.setter
    def lamports(self, value: pulumi.Input[str]):
        pulumi.set(self, "lamports", value)

    @property
    @pulumi.getter
    def pubkey(self) -> pulumi.Input[str]:
        return pulumi.get(self, "pubkey")

    @pubkey.setter
    def pubkey(self, value: pulumi.Input[str]):
        pulumi.set(self, "pubkey", value)


