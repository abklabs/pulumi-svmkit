# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from .. import deb as _deb

__all__ = [
    'ConfigArgs',
    'ConfigArgsDict',
]

MYPY = False

if not MYPY:
    class ConfigArgsDict(TypedDict):
        package_config: NotRequired[pulumi.Input['_deb.PackageConfigArgsDict']]
elif False:
    ConfigArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class ConfigArgs:
    def __init__(__self__, *,
                 package_config: Optional[pulumi.Input['_deb.PackageConfigArgs']] = None):
        if package_config is not None:
            pulumi.set(__self__, "package_config", package_config)

    @property
    @pulumi.getter(name="packageConfig")
    def package_config(self) -> Optional[pulumi.Input['_deb.PackageConfigArgs']]:
        return pulumi.get(self, "package_config")

    @package_config.setter
    def package_config(self, value: Optional[pulumi.Input['_deb.PackageConfigArgs']]):
        pulumi.set(self, "package_config", value)


