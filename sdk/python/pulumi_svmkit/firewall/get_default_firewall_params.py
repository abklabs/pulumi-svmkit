# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from ._enums import *

__all__ = [
    'GetDefaultFirewallParamsResult',
    'AwaitableGetDefaultFirewallParamsResult',
    'get_default_firewall_params',
    'get_default_firewall_params_output',
]

@pulumi.output_type
class GetDefaultFirewallParamsResult:
    def __init__(__self__, allow_ports=None, variant=None):
        if allow_ports and not isinstance(allow_ports, list):
            raise TypeError("Expected argument 'allow_ports' to be a list")
        pulumi.set(__self__, "allow_ports", allow_ports)
        if variant and not isinstance(variant, str):
            raise TypeError("Expected argument 'variant' to be a str")
        pulumi.set(__self__, "variant", variant)

    @_builtins.property
    @pulumi.getter(name="allowPorts")
    def allow_ports(self) -> Sequence[_builtins.str]:
        return pulumi.get(self, "allow_ports")

    @_builtins.property
    @pulumi.getter
    def variant(self) -> 'FirewallVariant':
        return pulumi.get(self, "variant")


class AwaitableGetDefaultFirewallParamsResult(GetDefaultFirewallParamsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDefaultFirewallParamsResult(
            allow_ports=self.allow_ports,
            variant=self.variant)


def get_default_firewall_params(variant: Optional['FirewallVariant'] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDefaultFirewallParamsResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['variant'] = variant
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('svmkit:firewall:getDefaultFirewallParams', __args__, opts=opts, typ=GetDefaultFirewallParamsResult).value

    return AwaitableGetDefaultFirewallParamsResult(
        allow_ports=pulumi.get(__ret__, 'allow_ports'),
        variant=pulumi.get(__ret__, 'variant'))
def get_default_firewall_params_output(variant: Optional[pulumi.Input['FirewallVariant']] = None,
                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDefaultFirewallParamsResult]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['variant'] = variant
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('svmkit:firewall:getDefaultFirewallParams', __args__, opts=opts, typ=GetDefaultFirewallParamsResult)
    return __ret__.apply(lambda __response__: GetDefaultFirewallParamsResult(
        allow_ports=pulumi.get(__response__, 'allow_ports'),
        variant=pulumi.get(__response__, 'variant')))
