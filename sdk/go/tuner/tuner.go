// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tuner

import (
	"context"
	"reflect"

	"errors"
	"github.com/abklabs/pulumi-svmkit/sdk/go/internal"
	"github.com/abklabs/pulumi-svmkit/sdk/go/runner"
	"github.com/abklabs/pulumi-svmkit/sdk/go/ssh"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Tuner struct {
	pulumi.CustomResourceState

	Connection   ssh.ConnectionOutput       `pulumi:"connection"`
	CpuGovernor  pulumi.StringPtrOutput     `pulumi:"cpuGovernor"`
	Kernel       TunerKernelParamsPtrOutput `pulumi:"kernel"`
	Net          TunerNetParamsPtrOutput    `pulumi:"net"`
	RunnerConfig runner.ConfigPtrOutput     `pulumi:"runnerConfig"`
	Vm           TunerVmParamsPtrOutput     `pulumi:"vm"`
}

// NewTuner registers a new resource with the given unique name, arguments, and options.
func NewTuner(ctx *pulumi.Context,
	name string, args *TunerArgs, opts ...pulumi.ResourceOption) (*Tuner, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Connection == nil {
		return nil, errors.New("invalid value for required argument 'Connection'")
	}
	args.Connection = args.Connection.ToConnectionOutput().ApplyT(func(v ssh.Connection) ssh.Connection { return *v.Defaults() }).(ssh.ConnectionOutput)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Tuner
	err := ctx.RegisterResource("svmkit:tuner:Tuner", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTuner gets an existing Tuner resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTuner(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TunerState, opts ...pulumi.ResourceOption) (*Tuner, error) {
	var resource Tuner
	err := ctx.ReadResource("svmkit:tuner:Tuner", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Tuner resources.
type tunerState struct {
}

type TunerState struct {
}

func (TunerState) ElementType() reflect.Type {
	return reflect.TypeOf((*tunerState)(nil)).Elem()
}

type tunerArgs struct {
	Connection   ssh.Connection     `pulumi:"connection"`
	CpuGovernor  *string            `pulumi:"cpuGovernor"`
	Kernel       *TunerKernelParams `pulumi:"kernel"`
	Net          *TunerNetParams    `pulumi:"net"`
	RunnerConfig *runner.Config     `pulumi:"runnerConfig"`
	Vm           *TunerVmParams     `pulumi:"vm"`
}

// The set of arguments for constructing a Tuner resource.
type TunerArgs struct {
	Connection   ssh.ConnectionInput
	CpuGovernor  pulumi.StringPtrInput
	Kernel       TunerKernelParamsPtrInput
	Net          TunerNetParamsPtrInput
	RunnerConfig runner.ConfigPtrInput
	Vm           TunerVmParamsPtrInput
}

func (TunerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tunerArgs)(nil)).Elem()
}

type TunerInput interface {
	pulumi.Input

	ToTunerOutput() TunerOutput
	ToTunerOutputWithContext(ctx context.Context) TunerOutput
}

func (*Tuner) ElementType() reflect.Type {
	return reflect.TypeOf((**Tuner)(nil)).Elem()
}

func (i *Tuner) ToTunerOutput() TunerOutput {
	return i.ToTunerOutputWithContext(context.Background())
}

func (i *Tuner) ToTunerOutputWithContext(ctx context.Context) TunerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunerOutput)
}

type TunerOutput struct{ *pulumi.OutputState }

func (TunerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Tuner)(nil)).Elem()
}

func (o TunerOutput) ToTunerOutput() TunerOutput {
	return o
}

func (o TunerOutput) ToTunerOutputWithContext(ctx context.Context) TunerOutput {
	return o
}

func (o TunerOutput) Connection() ssh.ConnectionOutput {
	return o.ApplyT(func(v *Tuner) ssh.ConnectionOutput { return v.Connection }).(ssh.ConnectionOutput)
}

func (o TunerOutput) CpuGovernor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Tuner) pulumi.StringPtrOutput { return v.CpuGovernor }).(pulumi.StringPtrOutput)
}

func (o TunerOutput) Kernel() TunerKernelParamsPtrOutput {
	return o.ApplyT(func(v *Tuner) TunerKernelParamsPtrOutput { return v.Kernel }).(TunerKernelParamsPtrOutput)
}

func (o TunerOutput) Net() TunerNetParamsPtrOutput {
	return o.ApplyT(func(v *Tuner) TunerNetParamsPtrOutput { return v.Net }).(TunerNetParamsPtrOutput)
}

func (o TunerOutput) RunnerConfig() runner.ConfigPtrOutput {
	return o.ApplyT(func(v *Tuner) runner.ConfigPtrOutput { return v.RunnerConfig }).(runner.ConfigPtrOutput)
}

func (o TunerOutput) Vm() TunerVmParamsPtrOutput {
	return o.ApplyT(func(v *Tuner) TunerVmParamsPtrOutput { return v.Vm }).(TunerVmParamsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TunerInput)(nil)).Elem(), &Tuner{})
	pulumi.RegisterOutputType(TunerOutput{})
}
