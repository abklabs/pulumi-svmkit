// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package runner

import (
	"context"
	"reflect"

	"github.com/abklabs/pulumi-svmkit/sdk/go/deb"
	"github.com/abklabs/pulumi-svmkit/sdk/go/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type Config struct {
	AptLockTimeout *int               `pulumi:"aptLockTimeout"`
	PackageConfig  *deb.PackageConfig `pulumi:"packageConfig"`
}

// ConfigInput is an input type that accepts ConfigArgs and ConfigOutput values.
// You can construct a concrete instance of `ConfigInput` via:
//
//	ConfigArgs{...}
type ConfigInput interface {
	pulumi.Input

	ToConfigOutput() ConfigOutput
	ToConfigOutputWithContext(context.Context) ConfigOutput
}

type ConfigArgs struct {
	AptLockTimeout pulumi.IntPtrInput        `pulumi:"aptLockTimeout"`
	PackageConfig  deb.PackageConfigPtrInput `pulumi:"packageConfig"`
}

func (ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Config)(nil)).Elem()
}

func (i ConfigArgs) ToConfigOutput() ConfigOutput {
	return i.ToConfigOutputWithContext(context.Background())
}

func (i ConfigArgs) ToConfigOutputWithContext(ctx context.Context) ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigOutput)
}

func (i ConfigArgs) ToConfigPtrOutput() ConfigPtrOutput {
	return i.ToConfigPtrOutputWithContext(context.Background())
}

func (i ConfigArgs) ToConfigPtrOutputWithContext(ctx context.Context) ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigOutput).ToConfigPtrOutputWithContext(ctx)
}

// ConfigPtrInput is an input type that accepts ConfigArgs, ConfigPtr and ConfigPtrOutput values.
// You can construct a concrete instance of `ConfigPtrInput` via:
//
//	        ConfigArgs{...}
//
//	or:
//
//	        nil
type ConfigPtrInput interface {
	pulumi.Input

	ToConfigPtrOutput() ConfigPtrOutput
	ToConfigPtrOutputWithContext(context.Context) ConfigPtrOutput
}

type configPtrType ConfigArgs

func ConfigPtr(v *ConfigArgs) ConfigPtrInput {
	return (*configPtrType)(v)
}

func (*configPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Config)(nil)).Elem()
}

func (i *configPtrType) ToConfigPtrOutput() ConfigPtrOutput {
	return i.ToConfigPtrOutputWithContext(context.Background())
}

func (i *configPtrType) ToConfigPtrOutputWithContext(ctx context.Context) ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigPtrOutput)
}

type ConfigOutput struct{ *pulumi.OutputState }

func (ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Config)(nil)).Elem()
}

func (o ConfigOutput) ToConfigOutput() ConfigOutput {
	return o
}

func (o ConfigOutput) ToConfigOutputWithContext(ctx context.Context) ConfigOutput {
	return o
}

func (o ConfigOutput) ToConfigPtrOutput() ConfigPtrOutput {
	return o.ToConfigPtrOutputWithContext(context.Background())
}

func (o ConfigOutput) ToConfigPtrOutputWithContext(ctx context.Context) ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Config) *Config {
		return &v
	}).(ConfigPtrOutput)
}

func (o ConfigOutput) AptLockTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Config) *int { return v.AptLockTimeout }).(pulumi.IntPtrOutput)
}

func (o ConfigOutput) PackageConfig() deb.PackageConfigPtrOutput {
	return o.ApplyT(func(v Config) *deb.PackageConfig { return v.PackageConfig }).(deb.PackageConfigPtrOutput)
}

type ConfigPtrOutput struct{ *pulumi.OutputState }

func (ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Config)(nil)).Elem()
}

func (o ConfigPtrOutput) ToConfigPtrOutput() ConfigPtrOutput {
	return o
}

func (o ConfigPtrOutput) ToConfigPtrOutputWithContext(ctx context.Context) ConfigPtrOutput {
	return o
}

func (o ConfigPtrOutput) Elem() ConfigOutput {
	return o.ApplyT(func(v *Config) Config {
		if v != nil {
			return *v
		}
		var ret Config
		return ret
	}).(ConfigOutput)
}

func (o ConfigPtrOutput) AptLockTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Config) *int {
		if v == nil {
			return nil
		}
		return v.AptLockTimeout
	}).(pulumi.IntPtrOutput)
}

func (o ConfigPtrOutput) PackageConfig() deb.PackageConfigPtrOutput {
	return o.ApplyT(func(v *Config) *deb.PackageConfig {
		if v == nil {
			return nil
		}
		return v.PackageConfig
	}).(deb.PackageConfigPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInput)(nil)).Elem(), ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigPtrInput)(nil)).Elem(), ConfigArgs{})
	pulumi.RegisterOutputType(ConfigOutput{})
	pulumi.RegisterOutputType(ConfigPtrOutput{})
}
