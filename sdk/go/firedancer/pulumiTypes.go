// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package firedancer

import (
	"context"
	"reflect"

	"github.com/abklabs/pulumi-svmkit/sdk/go/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type Config struct {
	Consensus        *ConfigConsensus `pulumi:"consensus"`
	DynamicPortRange *string          `pulumi:"dynamicPortRange"`
	ExtraConfig      []string         `pulumi:"extraConfig"`
	Gossip           *ConfigGossip    `pulumi:"gossip"`
	Hugetlbfs        *ConfigHugeTLBFS `pulumi:"hugetlbfs"`
	Layout           *ConfigLayout    `pulumi:"layout"`
	Ledger           *ConfigLedger    `pulumi:"ledger"`
	Log              *ConfigLog       `pulumi:"log"`
	Name             *string          `pulumi:"name"`
	Reporting        *ConfigReporting `pulumi:"reporting"`
	Rpc              *ConfigRPC       `pulumi:"rpc"`
	ScratchDirectory *string          `pulumi:"scratchDirectory"`
	Snapshots        *ConfigSnapshots `pulumi:"snapshots"`
	User             *string          `pulumi:"user"`
}

// ConfigInput is an input type that accepts ConfigArgs and ConfigOutput values.
// You can construct a concrete instance of `ConfigInput` via:
//
//	ConfigArgs{...}
type ConfigInput interface {
	pulumi.Input

	ToConfigOutput() ConfigOutput
	ToConfigOutputWithContext(context.Context) ConfigOutput
}

type ConfigArgs struct {
	Consensus        ConfigConsensusPtrInput `pulumi:"consensus"`
	DynamicPortRange pulumi.StringPtrInput   `pulumi:"dynamicPortRange"`
	ExtraConfig      pulumi.StringArrayInput `pulumi:"extraConfig"`
	Gossip           ConfigGossipPtrInput    `pulumi:"gossip"`
	Hugetlbfs        ConfigHugeTLBFSPtrInput `pulumi:"hugetlbfs"`
	Layout           ConfigLayoutPtrInput    `pulumi:"layout"`
	Ledger           ConfigLedgerPtrInput    `pulumi:"ledger"`
	Log              ConfigLogPtrInput       `pulumi:"log"`
	Name             pulumi.StringPtrInput   `pulumi:"name"`
	Reporting        ConfigReportingPtrInput `pulumi:"reporting"`
	Rpc              ConfigRPCPtrInput       `pulumi:"rpc"`
	ScratchDirectory pulumi.StringPtrInput   `pulumi:"scratchDirectory"`
	Snapshots        ConfigSnapshotsPtrInput `pulumi:"snapshots"`
	User             pulumi.StringPtrInput   `pulumi:"user"`
}

func (ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Config)(nil)).Elem()
}

func (i ConfigArgs) ToConfigOutput() ConfigOutput {
	return i.ToConfigOutputWithContext(context.Background())
}

func (i ConfigArgs) ToConfigOutputWithContext(ctx context.Context) ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigOutput)
}

type ConfigOutput struct{ *pulumi.OutputState }

func (ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Config)(nil)).Elem()
}

func (o ConfigOutput) ToConfigOutput() ConfigOutput {
	return o
}

func (o ConfigOutput) ToConfigOutputWithContext(ctx context.Context) ConfigOutput {
	return o
}

func (o ConfigOutput) Consensus() ConfigConsensusPtrOutput {
	return o.ApplyT(func(v Config) *ConfigConsensus { return v.Consensus }).(ConfigConsensusPtrOutput)
}

func (o ConfigOutput) DynamicPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Config) *string { return v.DynamicPortRange }).(pulumi.StringPtrOutput)
}

func (o ConfigOutput) ExtraConfig() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Config) []string { return v.ExtraConfig }).(pulumi.StringArrayOutput)
}

func (o ConfigOutput) Gossip() ConfigGossipPtrOutput {
	return o.ApplyT(func(v Config) *ConfigGossip { return v.Gossip }).(ConfigGossipPtrOutput)
}

func (o ConfigOutput) Hugetlbfs() ConfigHugeTLBFSPtrOutput {
	return o.ApplyT(func(v Config) *ConfigHugeTLBFS { return v.Hugetlbfs }).(ConfigHugeTLBFSPtrOutput)
}

func (o ConfigOutput) Layout() ConfigLayoutPtrOutput {
	return o.ApplyT(func(v Config) *ConfigLayout { return v.Layout }).(ConfigLayoutPtrOutput)
}

func (o ConfigOutput) Ledger() ConfigLedgerPtrOutput {
	return o.ApplyT(func(v Config) *ConfigLedger { return v.Ledger }).(ConfigLedgerPtrOutput)
}

func (o ConfigOutput) Log() ConfigLogPtrOutput {
	return o.ApplyT(func(v Config) *ConfigLog { return v.Log }).(ConfigLogPtrOutput)
}

func (o ConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Config) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ConfigOutput) Reporting() ConfigReportingPtrOutput {
	return o.ApplyT(func(v Config) *ConfigReporting { return v.Reporting }).(ConfigReportingPtrOutput)
}

func (o ConfigOutput) Rpc() ConfigRPCPtrOutput {
	return o.ApplyT(func(v Config) *ConfigRPC { return v.Rpc }).(ConfigRPCPtrOutput)
}

func (o ConfigOutput) ScratchDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Config) *string { return v.ScratchDirectory }).(pulumi.StringPtrOutput)
}

func (o ConfigOutput) Snapshots() ConfigSnapshotsPtrOutput {
	return o.ApplyT(func(v Config) *ConfigSnapshots { return v.Snapshots }).(ConfigSnapshotsPtrOutput)
}

func (o ConfigOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Config) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ConfigConsensus struct {
	AuthorizedVoterPaths       []string `pulumi:"authorizedVoterPaths"`
	ExpectedBankHash           *string  `pulumi:"expectedBankHash"`
	ExpectedGenesisHash        *string  `pulumi:"expectedGenesisHash"`
	ExpectedShredVersion       *int     `pulumi:"expectedShredVersion"`
	GenesisFetch               *bool    `pulumi:"genesisFetch"`
	HardForkAtSlots            []string `pulumi:"hardForkAtSlots"`
	IdentityPath               *string  `pulumi:"identityPath"`
	KnownValidators            []string `pulumi:"knownValidators"`
	OsNetworkLimitsTest        *bool    `pulumi:"osNetworkLimitsTest"`
	PohSpeedTest               *bool    `pulumi:"pohSpeedTest"`
	SnapshotFetch              *bool    `pulumi:"snapshotFetch"`
	VoteAccountPath            *string  `pulumi:"voteAccountPath"`
	WaitForSupermajorityAtSlot *int     `pulumi:"waitForSupermajorityAtSlot"`
	WaitForVoteToStartLeader   *bool    `pulumi:"waitForVoteToStartLeader"`
}

// ConfigConsensusInput is an input type that accepts ConfigConsensusArgs and ConfigConsensusOutput values.
// You can construct a concrete instance of `ConfigConsensusInput` via:
//
//	ConfigConsensusArgs{...}
type ConfigConsensusInput interface {
	pulumi.Input

	ToConfigConsensusOutput() ConfigConsensusOutput
	ToConfigConsensusOutputWithContext(context.Context) ConfigConsensusOutput
}

type ConfigConsensusArgs struct {
	AuthorizedVoterPaths       pulumi.StringArrayInput `pulumi:"authorizedVoterPaths"`
	ExpectedBankHash           pulumi.StringPtrInput   `pulumi:"expectedBankHash"`
	ExpectedGenesisHash        pulumi.StringPtrInput   `pulumi:"expectedGenesisHash"`
	ExpectedShredVersion       pulumi.IntPtrInput      `pulumi:"expectedShredVersion"`
	GenesisFetch               pulumi.BoolPtrInput     `pulumi:"genesisFetch"`
	HardForkAtSlots            pulumi.StringArrayInput `pulumi:"hardForkAtSlots"`
	IdentityPath               pulumi.StringPtrInput   `pulumi:"identityPath"`
	KnownValidators            pulumi.StringArrayInput `pulumi:"knownValidators"`
	OsNetworkLimitsTest        pulumi.BoolPtrInput     `pulumi:"osNetworkLimitsTest"`
	PohSpeedTest               pulumi.BoolPtrInput     `pulumi:"pohSpeedTest"`
	SnapshotFetch              pulumi.BoolPtrInput     `pulumi:"snapshotFetch"`
	VoteAccountPath            pulumi.StringPtrInput   `pulumi:"voteAccountPath"`
	WaitForSupermajorityAtSlot pulumi.IntPtrInput      `pulumi:"waitForSupermajorityAtSlot"`
	WaitForVoteToStartLeader   pulumi.BoolPtrInput     `pulumi:"waitForVoteToStartLeader"`
}

func (ConfigConsensusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConsensus)(nil)).Elem()
}

func (i ConfigConsensusArgs) ToConfigConsensusOutput() ConfigConsensusOutput {
	return i.ToConfigConsensusOutputWithContext(context.Background())
}

func (i ConfigConsensusArgs) ToConfigConsensusOutputWithContext(ctx context.Context) ConfigConsensusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConsensusOutput)
}

func (i ConfigConsensusArgs) ToConfigConsensusPtrOutput() ConfigConsensusPtrOutput {
	return i.ToConfigConsensusPtrOutputWithContext(context.Background())
}

func (i ConfigConsensusArgs) ToConfigConsensusPtrOutputWithContext(ctx context.Context) ConfigConsensusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConsensusOutput).ToConfigConsensusPtrOutputWithContext(ctx)
}

// ConfigConsensusPtrInput is an input type that accepts ConfigConsensusArgs, ConfigConsensusPtr and ConfigConsensusPtrOutput values.
// You can construct a concrete instance of `ConfigConsensusPtrInput` via:
//
//	        ConfigConsensusArgs{...}
//
//	or:
//
//	        nil
type ConfigConsensusPtrInput interface {
	pulumi.Input

	ToConfigConsensusPtrOutput() ConfigConsensusPtrOutput
	ToConfigConsensusPtrOutputWithContext(context.Context) ConfigConsensusPtrOutput
}

type configConsensusPtrType ConfigConsensusArgs

func ConfigConsensusPtr(v *ConfigConsensusArgs) ConfigConsensusPtrInput {
	return (*configConsensusPtrType)(v)
}

func (*configConsensusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigConsensus)(nil)).Elem()
}

func (i *configConsensusPtrType) ToConfigConsensusPtrOutput() ConfigConsensusPtrOutput {
	return i.ToConfigConsensusPtrOutputWithContext(context.Background())
}

func (i *configConsensusPtrType) ToConfigConsensusPtrOutputWithContext(ctx context.Context) ConfigConsensusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigConsensusPtrOutput)
}

type ConfigConsensusOutput struct{ *pulumi.OutputState }

func (ConfigConsensusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigConsensus)(nil)).Elem()
}

func (o ConfigConsensusOutput) ToConfigConsensusOutput() ConfigConsensusOutput {
	return o
}

func (o ConfigConsensusOutput) ToConfigConsensusOutputWithContext(ctx context.Context) ConfigConsensusOutput {
	return o
}

func (o ConfigConsensusOutput) ToConfigConsensusPtrOutput() ConfigConsensusPtrOutput {
	return o.ToConfigConsensusPtrOutputWithContext(context.Background())
}

func (o ConfigConsensusOutput) ToConfigConsensusPtrOutputWithContext(ctx context.Context) ConfigConsensusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigConsensus) *ConfigConsensus {
		return &v
	}).(ConfigConsensusPtrOutput)
}

func (o ConfigConsensusOutput) AuthorizedVoterPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigConsensus) []string { return v.AuthorizedVoterPaths }).(pulumi.StringArrayOutput)
}

func (o ConfigConsensusOutput) ExpectedBankHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConsensus) *string { return v.ExpectedBankHash }).(pulumi.StringPtrOutput)
}

func (o ConfigConsensusOutput) ExpectedGenesisHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConsensus) *string { return v.ExpectedGenesisHash }).(pulumi.StringPtrOutput)
}

func (o ConfigConsensusOutput) ExpectedShredVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigConsensus) *int { return v.ExpectedShredVersion }).(pulumi.IntPtrOutput)
}

func (o ConfigConsensusOutput) GenesisFetch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigConsensus) *bool { return v.GenesisFetch }).(pulumi.BoolPtrOutput)
}

func (o ConfigConsensusOutput) HardForkAtSlots() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigConsensus) []string { return v.HardForkAtSlots }).(pulumi.StringArrayOutput)
}

func (o ConfigConsensusOutput) IdentityPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConsensus) *string { return v.IdentityPath }).(pulumi.StringPtrOutput)
}

func (o ConfigConsensusOutput) KnownValidators() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigConsensus) []string { return v.KnownValidators }).(pulumi.StringArrayOutput)
}

func (o ConfigConsensusOutput) OsNetworkLimitsTest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigConsensus) *bool { return v.OsNetworkLimitsTest }).(pulumi.BoolPtrOutput)
}

func (o ConfigConsensusOutput) PohSpeedTest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigConsensus) *bool { return v.PohSpeedTest }).(pulumi.BoolPtrOutput)
}

func (o ConfigConsensusOutput) SnapshotFetch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigConsensus) *bool { return v.SnapshotFetch }).(pulumi.BoolPtrOutput)
}

func (o ConfigConsensusOutput) VoteAccountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigConsensus) *string { return v.VoteAccountPath }).(pulumi.StringPtrOutput)
}

func (o ConfigConsensusOutput) WaitForSupermajorityAtSlot() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigConsensus) *int { return v.WaitForSupermajorityAtSlot }).(pulumi.IntPtrOutput)
}

func (o ConfigConsensusOutput) WaitForVoteToStartLeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigConsensus) *bool { return v.WaitForVoteToStartLeader }).(pulumi.BoolPtrOutput)
}

type ConfigConsensusPtrOutput struct{ *pulumi.OutputState }

func (ConfigConsensusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigConsensus)(nil)).Elem()
}

func (o ConfigConsensusPtrOutput) ToConfigConsensusPtrOutput() ConfigConsensusPtrOutput {
	return o
}

func (o ConfigConsensusPtrOutput) ToConfigConsensusPtrOutputWithContext(ctx context.Context) ConfigConsensusPtrOutput {
	return o
}

func (o ConfigConsensusPtrOutput) Elem() ConfigConsensusOutput {
	return o.ApplyT(func(v *ConfigConsensus) ConfigConsensus {
		if v != nil {
			return *v
		}
		var ret ConfigConsensus
		return ret
	}).(ConfigConsensusOutput)
}

func (o ConfigConsensusPtrOutput) AuthorizedVoterPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigConsensus) []string {
		if v == nil {
			return nil
		}
		return v.AuthorizedVoterPaths
	}).(pulumi.StringArrayOutput)
}

func (o ConfigConsensusPtrOutput) ExpectedBankHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConsensus) *string {
		if v == nil {
			return nil
		}
		return v.ExpectedBankHash
	}).(pulumi.StringPtrOutput)
}

func (o ConfigConsensusPtrOutput) ExpectedGenesisHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConsensus) *string {
		if v == nil {
			return nil
		}
		return v.ExpectedGenesisHash
	}).(pulumi.StringPtrOutput)
}

func (o ConfigConsensusPtrOutput) ExpectedShredVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigConsensus) *int {
		if v == nil {
			return nil
		}
		return v.ExpectedShredVersion
	}).(pulumi.IntPtrOutput)
}

func (o ConfigConsensusPtrOutput) GenesisFetch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigConsensus) *bool {
		if v == nil {
			return nil
		}
		return v.GenesisFetch
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigConsensusPtrOutput) HardForkAtSlots() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigConsensus) []string {
		if v == nil {
			return nil
		}
		return v.HardForkAtSlots
	}).(pulumi.StringArrayOutput)
}

func (o ConfigConsensusPtrOutput) IdentityPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConsensus) *string {
		if v == nil {
			return nil
		}
		return v.IdentityPath
	}).(pulumi.StringPtrOutput)
}

func (o ConfigConsensusPtrOutput) KnownValidators() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigConsensus) []string {
		if v == nil {
			return nil
		}
		return v.KnownValidators
	}).(pulumi.StringArrayOutput)
}

func (o ConfigConsensusPtrOutput) OsNetworkLimitsTest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigConsensus) *bool {
		if v == nil {
			return nil
		}
		return v.OsNetworkLimitsTest
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigConsensusPtrOutput) PohSpeedTest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigConsensus) *bool {
		if v == nil {
			return nil
		}
		return v.PohSpeedTest
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigConsensusPtrOutput) SnapshotFetch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigConsensus) *bool {
		if v == nil {
			return nil
		}
		return v.SnapshotFetch
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigConsensusPtrOutput) VoteAccountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigConsensus) *string {
		if v == nil {
			return nil
		}
		return v.VoteAccountPath
	}).(pulumi.StringPtrOutput)
}

func (o ConfigConsensusPtrOutput) WaitForSupermajorityAtSlot() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigConsensus) *int {
		if v == nil {
			return nil
		}
		return v.WaitForSupermajorityAtSlot
	}).(pulumi.IntPtrOutput)
}

func (o ConfigConsensusPtrOutput) WaitForVoteToStartLeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigConsensus) *bool {
		if v == nil {
			return nil
		}
		return v.WaitForVoteToStartLeader
	}).(pulumi.BoolPtrOutput)
}

type ConfigGossip struct {
	Entrypoints []string `pulumi:"entrypoints"`
	Host        *string  `pulumi:"host"`
	Port        *int     `pulumi:"port"`
	PortCheck   *bool    `pulumi:"portCheck"`
}

// ConfigGossipInput is an input type that accepts ConfigGossipArgs and ConfigGossipOutput values.
// You can construct a concrete instance of `ConfigGossipInput` via:
//
//	ConfigGossipArgs{...}
type ConfigGossipInput interface {
	pulumi.Input

	ToConfigGossipOutput() ConfigGossipOutput
	ToConfigGossipOutputWithContext(context.Context) ConfigGossipOutput
}

type ConfigGossipArgs struct {
	Entrypoints pulumi.StringArrayInput `pulumi:"entrypoints"`
	Host        pulumi.StringPtrInput   `pulumi:"host"`
	Port        pulumi.IntPtrInput      `pulumi:"port"`
	PortCheck   pulumi.BoolPtrInput     `pulumi:"portCheck"`
}

func (ConfigGossipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigGossip)(nil)).Elem()
}

func (i ConfigGossipArgs) ToConfigGossipOutput() ConfigGossipOutput {
	return i.ToConfigGossipOutputWithContext(context.Background())
}

func (i ConfigGossipArgs) ToConfigGossipOutputWithContext(ctx context.Context) ConfigGossipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigGossipOutput)
}

func (i ConfigGossipArgs) ToConfigGossipPtrOutput() ConfigGossipPtrOutput {
	return i.ToConfigGossipPtrOutputWithContext(context.Background())
}

func (i ConfigGossipArgs) ToConfigGossipPtrOutputWithContext(ctx context.Context) ConfigGossipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigGossipOutput).ToConfigGossipPtrOutputWithContext(ctx)
}

// ConfigGossipPtrInput is an input type that accepts ConfigGossipArgs, ConfigGossipPtr and ConfigGossipPtrOutput values.
// You can construct a concrete instance of `ConfigGossipPtrInput` via:
//
//	        ConfigGossipArgs{...}
//
//	or:
//
//	        nil
type ConfigGossipPtrInput interface {
	pulumi.Input

	ToConfigGossipPtrOutput() ConfigGossipPtrOutput
	ToConfigGossipPtrOutputWithContext(context.Context) ConfigGossipPtrOutput
}

type configGossipPtrType ConfigGossipArgs

func ConfigGossipPtr(v *ConfigGossipArgs) ConfigGossipPtrInput {
	return (*configGossipPtrType)(v)
}

func (*configGossipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigGossip)(nil)).Elem()
}

func (i *configGossipPtrType) ToConfigGossipPtrOutput() ConfigGossipPtrOutput {
	return i.ToConfigGossipPtrOutputWithContext(context.Background())
}

func (i *configGossipPtrType) ToConfigGossipPtrOutputWithContext(ctx context.Context) ConfigGossipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigGossipPtrOutput)
}

type ConfigGossipOutput struct{ *pulumi.OutputState }

func (ConfigGossipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigGossip)(nil)).Elem()
}

func (o ConfigGossipOutput) ToConfigGossipOutput() ConfigGossipOutput {
	return o
}

func (o ConfigGossipOutput) ToConfigGossipOutputWithContext(ctx context.Context) ConfigGossipOutput {
	return o
}

func (o ConfigGossipOutput) ToConfigGossipPtrOutput() ConfigGossipPtrOutput {
	return o.ToConfigGossipPtrOutputWithContext(context.Background())
}

func (o ConfigGossipOutput) ToConfigGossipPtrOutputWithContext(ctx context.Context) ConfigGossipPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigGossip) *ConfigGossip {
		return &v
	}).(ConfigGossipPtrOutput)
}

func (o ConfigGossipOutput) Entrypoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigGossip) []string { return v.Entrypoints }).(pulumi.StringArrayOutput)
}

func (o ConfigGossipOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigGossip) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ConfigGossipOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigGossip) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ConfigGossipOutput) PortCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigGossip) *bool { return v.PortCheck }).(pulumi.BoolPtrOutput)
}

type ConfigGossipPtrOutput struct{ *pulumi.OutputState }

func (ConfigGossipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigGossip)(nil)).Elem()
}

func (o ConfigGossipPtrOutput) ToConfigGossipPtrOutput() ConfigGossipPtrOutput {
	return o
}

func (o ConfigGossipPtrOutput) ToConfigGossipPtrOutputWithContext(ctx context.Context) ConfigGossipPtrOutput {
	return o
}

func (o ConfigGossipPtrOutput) Elem() ConfigGossipOutput {
	return o.ApplyT(func(v *ConfigGossip) ConfigGossip {
		if v != nil {
			return *v
		}
		var ret ConfigGossip
		return ret
	}).(ConfigGossipOutput)
}

func (o ConfigGossipPtrOutput) Entrypoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigGossip) []string {
		if v == nil {
			return nil
		}
		return v.Entrypoints
	}).(pulumi.StringArrayOutput)
}

func (o ConfigGossipPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigGossip) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o ConfigGossipPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigGossip) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o ConfigGossipPtrOutput) PortCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigGossip) *bool {
		if v == nil {
			return nil
		}
		return v.PortCheck
	}).(pulumi.BoolPtrOutput)
}

type ConfigHugeTLBFS struct {
	MountPath *string `pulumi:"mountPath"`
}

// ConfigHugeTLBFSInput is an input type that accepts ConfigHugeTLBFSArgs and ConfigHugeTLBFSOutput values.
// You can construct a concrete instance of `ConfigHugeTLBFSInput` via:
//
//	ConfigHugeTLBFSArgs{...}
type ConfigHugeTLBFSInput interface {
	pulumi.Input

	ToConfigHugeTLBFSOutput() ConfigHugeTLBFSOutput
	ToConfigHugeTLBFSOutputWithContext(context.Context) ConfigHugeTLBFSOutput
}

type ConfigHugeTLBFSArgs struct {
	MountPath pulumi.StringPtrInput `pulumi:"mountPath"`
}

func (ConfigHugeTLBFSArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigHugeTLBFS)(nil)).Elem()
}

func (i ConfigHugeTLBFSArgs) ToConfigHugeTLBFSOutput() ConfigHugeTLBFSOutput {
	return i.ToConfigHugeTLBFSOutputWithContext(context.Background())
}

func (i ConfigHugeTLBFSArgs) ToConfigHugeTLBFSOutputWithContext(ctx context.Context) ConfigHugeTLBFSOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigHugeTLBFSOutput)
}

func (i ConfigHugeTLBFSArgs) ToConfigHugeTLBFSPtrOutput() ConfigHugeTLBFSPtrOutput {
	return i.ToConfigHugeTLBFSPtrOutputWithContext(context.Background())
}

func (i ConfigHugeTLBFSArgs) ToConfigHugeTLBFSPtrOutputWithContext(ctx context.Context) ConfigHugeTLBFSPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigHugeTLBFSOutput).ToConfigHugeTLBFSPtrOutputWithContext(ctx)
}

// ConfigHugeTLBFSPtrInput is an input type that accepts ConfigHugeTLBFSArgs, ConfigHugeTLBFSPtr and ConfigHugeTLBFSPtrOutput values.
// You can construct a concrete instance of `ConfigHugeTLBFSPtrInput` via:
//
//	        ConfigHugeTLBFSArgs{...}
//
//	or:
//
//	        nil
type ConfigHugeTLBFSPtrInput interface {
	pulumi.Input

	ToConfigHugeTLBFSPtrOutput() ConfigHugeTLBFSPtrOutput
	ToConfigHugeTLBFSPtrOutputWithContext(context.Context) ConfigHugeTLBFSPtrOutput
}

type configHugeTLBFSPtrType ConfigHugeTLBFSArgs

func ConfigHugeTLBFSPtr(v *ConfigHugeTLBFSArgs) ConfigHugeTLBFSPtrInput {
	return (*configHugeTLBFSPtrType)(v)
}

func (*configHugeTLBFSPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigHugeTLBFS)(nil)).Elem()
}

func (i *configHugeTLBFSPtrType) ToConfigHugeTLBFSPtrOutput() ConfigHugeTLBFSPtrOutput {
	return i.ToConfigHugeTLBFSPtrOutputWithContext(context.Background())
}

func (i *configHugeTLBFSPtrType) ToConfigHugeTLBFSPtrOutputWithContext(ctx context.Context) ConfigHugeTLBFSPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigHugeTLBFSPtrOutput)
}

type ConfigHugeTLBFSOutput struct{ *pulumi.OutputState }

func (ConfigHugeTLBFSOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigHugeTLBFS)(nil)).Elem()
}

func (o ConfigHugeTLBFSOutput) ToConfigHugeTLBFSOutput() ConfigHugeTLBFSOutput {
	return o
}

func (o ConfigHugeTLBFSOutput) ToConfigHugeTLBFSOutputWithContext(ctx context.Context) ConfigHugeTLBFSOutput {
	return o
}

func (o ConfigHugeTLBFSOutput) ToConfigHugeTLBFSPtrOutput() ConfigHugeTLBFSPtrOutput {
	return o.ToConfigHugeTLBFSPtrOutputWithContext(context.Background())
}

func (o ConfigHugeTLBFSOutput) ToConfigHugeTLBFSPtrOutputWithContext(ctx context.Context) ConfigHugeTLBFSPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigHugeTLBFS) *ConfigHugeTLBFS {
		return &v
	}).(ConfigHugeTLBFSPtrOutput)
}

func (o ConfigHugeTLBFSOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigHugeTLBFS) *string { return v.MountPath }).(pulumi.StringPtrOutput)
}

type ConfigHugeTLBFSPtrOutput struct{ *pulumi.OutputState }

func (ConfigHugeTLBFSPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigHugeTLBFS)(nil)).Elem()
}

func (o ConfigHugeTLBFSPtrOutput) ToConfigHugeTLBFSPtrOutput() ConfigHugeTLBFSPtrOutput {
	return o
}

func (o ConfigHugeTLBFSPtrOutput) ToConfigHugeTLBFSPtrOutputWithContext(ctx context.Context) ConfigHugeTLBFSPtrOutput {
	return o
}

func (o ConfigHugeTLBFSPtrOutput) Elem() ConfigHugeTLBFSOutput {
	return o.ApplyT(func(v *ConfigHugeTLBFS) ConfigHugeTLBFS {
		if v != nil {
			return *v
		}
		var ret ConfigHugeTLBFS
		return ret
	}).(ConfigHugeTLBFSOutput)
}

func (o ConfigHugeTLBFSPtrOutput) MountPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigHugeTLBFS) *string {
		if v == nil {
			return nil
		}
		return v.MountPath
	}).(pulumi.StringPtrOutput)
}

type ConfigLayout struct {
	Affinity        *string `pulumi:"affinity"`
	AgaveAffinity   *string `pulumi:"agaveAffinity"`
	BankTileCount   *int    `pulumi:"bankTileCount"`
	NetTileCount    *int    `pulumi:"netTileCount"`
	QuicTileCount   *int    `pulumi:"quicTileCount"`
	ResolvTileCount *int    `pulumi:"resolvTileCount"`
	ShredTileCount  *int    `pulumi:"shredTileCount"`
	VerifyTileCount *int    `pulumi:"verifyTileCount"`
}

// ConfigLayoutInput is an input type that accepts ConfigLayoutArgs and ConfigLayoutOutput values.
// You can construct a concrete instance of `ConfigLayoutInput` via:
//
//	ConfigLayoutArgs{...}
type ConfigLayoutInput interface {
	pulumi.Input

	ToConfigLayoutOutput() ConfigLayoutOutput
	ToConfigLayoutOutputWithContext(context.Context) ConfigLayoutOutput
}

type ConfigLayoutArgs struct {
	Affinity        pulumi.StringPtrInput `pulumi:"affinity"`
	AgaveAffinity   pulumi.StringPtrInput `pulumi:"agaveAffinity"`
	BankTileCount   pulumi.IntPtrInput    `pulumi:"bankTileCount"`
	NetTileCount    pulumi.IntPtrInput    `pulumi:"netTileCount"`
	QuicTileCount   pulumi.IntPtrInput    `pulumi:"quicTileCount"`
	ResolvTileCount pulumi.IntPtrInput    `pulumi:"resolvTileCount"`
	ShredTileCount  pulumi.IntPtrInput    `pulumi:"shredTileCount"`
	VerifyTileCount pulumi.IntPtrInput    `pulumi:"verifyTileCount"`
}

func (ConfigLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigLayout)(nil)).Elem()
}

func (i ConfigLayoutArgs) ToConfigLayoutOutput() ConfigLayoutOutput {
	return i.ToConfigLayoutOutputWithContext(context.Background())
}

func (i ConfigLayoutArgs) ToConfigLayoutOutputWithContext(ctx context.Context) ConfigLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigLayoutOutput)
}

func (i ConfigLayoutArgs) ToConfigLayoutPtrOutput() ConfigLayoutPtrOutput {
	return i.ToConfigLayoutPtrOutputWithContext(context.Background())
}

func (i ConfigLayoutArgs) ToConfigLayoutPtrOutputWithContext(ctx context.Context) ConfigLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigLayoutOutput).ToConfigLayoutPtrOutputWithContext(ctx)
}

// ConfigLayoutPtrInput is an input type that accepts ConfigLayoutArgs, ConfigLayoutPtr and ConfigLayoutPtrOutput values.
// You can construct a concrete instance of `ConfigLayoutPtrInput` via:
//
//	        ConfigLayoutArgs{...}
//
//	or:
//
//	        nil
type ConfigLayoutPtrInput interface {
	pulumi.Input

	ToConfigLayoutPtrOutput() ConfigLayoutPtrOutput
	ToConfigLayoutPtrOutputWithContext(context.Context) ConfigLayoutPtrOutput
}

type configLayoutPtrType ConfigLayoutArgs

func ConfigLayoutPtr(v *ConfigLayoutArgs) ConfigLayoutPtrInput {
	return (*configLayoutPtrType)(v)
}

func (*configLayoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigLayout)(nil)).Elem()
}

func (i *configLayoutPtrType) ToConfigLayoutPtrOutput() ConfigLayoutPtrOutput {
	return i.ToConfigLayoutPtrOutputWithContext(context.Background())
}

func (i *configLayoutPtrType) ToConfigLayoutPtrOutputWithContext(ctx context.Context) ConfigLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigLayoutPtrOutput)
}

type ConfigLayoutOutput struct{ *pulumi.OutputState }

func (ConfigLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigLayout)(nil)).Elem()
}

func (o ConfigLayoutOutput) ToConfigLayoutOutput() ConfigLayoutOutput {
	return o
}

func (o ConfigLayoutOutput) ToConfigLayoutOutputWithContext(ctx context.Context) ConfigLayoutOutput {
	return o
}

func (o ConfigLayoutOutput) ToConfigLayoutPtrOutput() ConfigLayoutPtrOutput {
	return o.ToConfigLayoutPtrOutputWithContext(context.Background())
}

func (o ConfigLayoutOutput) ToConfigLayoutPtrOutputWithContext(ctx context.Context) ConfigLayoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigLayout) *ConfigLayout {
		return &v
	}).(ConfigLayoutPtrOutput)
}

func (o ConfigLayoutOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigLayout) *string { return v.Affinity }).(pulumi.StringPtrOutput)
}

func (o ConfigLayoutOutput) AgaveAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigLayout) *string { return v.AgaveAffinity }).(pulumi.StringPtrOutput)
}

func (o ConfigLayoutOutput) BankTileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigLayout) *int { return v.BankTileCount }).(pulumi.IntPtrOutput)
}

func (o ConfigLayoutOutput) NetTileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigLayout) *int { return v.NetTileCount }).(pulumi.IntPtrOutput)
}

func (o ConfigLayoutOutput) QuicTileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigLayout) *int { return v.QuicTileCount }).(pulumi.IntPtrOutput)
}

func (o ConfigLayoutOutput) ResolvTileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigLayout) *int { return v.ResolvTileCount }).(pulumi.IntPtrOutput)
}

func (o ConfigLayoutOutput) ShredTileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigLayout) *int { return v.ShredTileCount }).(pulumi.IntPtrOutput)
}

func (o ConfigLayoutOutput) VerifyTileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigLayout) *int { return v.VerifyTileCount }).(pulumi.IntPtrOutput)
}

type ConfigLayoutPtrOutput struct{ *pulumi.OutputState }

func (ConfigLayoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigLayout)(nil)).Elem()
}

func (o ConfigLayoutPtrOutput) ToConfigLayoutPtrOutput() ConfigLayoutPtrOutput {
	return o
}

func (o ConfigLayoutPtrOutput) ToConfigLayoutPtrOutputWithContext(ctx context.Context) ConfigLayoutPtrOutput {
	return o
}

func (o ConfigLayoutPtrOutput) Elem() ConfigLayoutOutput {
	return o.ApplyT(func(v *ConfigLayout) ConfigLayout {
		if v != nil {
			return *v
		}
		var ret ConfigLayout
		return ret
	}).(ConfigLayoutOutput)
}

func (o ConfigLayoutPtrOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigLayout) *string {
		if v == nil {
			return nil
		}
		return v.Affinity
	}).(pulumi.StringPtrOutput)
}

func (o ConfigLayoutPtrOutput) AgaveAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigLayout) *string {
		if v == nil {
			return nil
		}
		return v.AgaveAffinity
	}).(pulumi.StringPtrOutput)
}

func (o ConfigLayoutPtrOutput) BankTileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigLayout) *int {
		if v == nil {
			return nil
		}
		return v.BankTileCount
	}).(pulumi.IntPtrOutput)
}

func (o ConfigLayoutPtrOutput) NetTileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigLayout) *int {
		if v == nil {
			return nil
		}
		return v.NetTileCount
	}).(pulumi.IntPtrOutput)
}

func (o ConfigLayoutPtrOutput) QuicTileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigLayout) *int {
		if v == nil {
			return nil
		}
		return v.QuicTileCount
	}).(pulumi.IntPtrOutput)
}

func (o ConfigLayoutPtrOutput) ResolvTileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigLayout) *int {
		if v == nil {
			return nil
		}
		return v.ResolvTileCount
	}).(pulumi.IntPtrOutput)
}

func (o ConfigLayoutPtrOutput) ShredTileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigLayout) *int {
		if v == nil {
			return nil
		}
		return v.ShredTileCount
	}).(pulumi.IntPtrOutput)
}

func (o ConfigLayoutPtrOutput) VerifyTileCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigLayout) *int {
		if v == nil {
			return nil
		}
		return v.VerifyTileCount
	}).(pulumi.IntPtrOutput)
}

type ConfigLedger struct {
	AccountIndexExcludeKeys []string `pulumi:"accountIndexExcludeKeys"`
	AccountIndexIncludeKeys []string `pulumi:"accountIndexIncludeKeys"`
	AccountIndexes          []string `pulumi:"accountIndexes"`
	AccountsPath            *string  `pulumi:"accountsPath"`
	LimitSize               *int     `pulumi:"limitSize"`
	Path                    *string  `pulumi:"path"`
	RequireTower            *bool    `pulumi:"requireTower"`
	SnapshotArchiveFormat   *string  `pulumi:"snapshotArchiveFormat"`
}

// ConfigLedgerInput is an input type that accepts ConfigLedgerArgs and ConfigLedgerOutput values.
// You can construct a concrete instance of `ConfigLedgerInput` via:
//
//	ConfigLedgerArgs{...}
type ConfigLedgerInput interface {
	pulumi.Input

	ToConfigLedgerOutput() ConfigLedgerOutput
	ToConfigLedgerOutputWithContext(context.Context) ConfigLedgerOutput
}

type ConfigLedgerArgs struct {
	AccountIndexExcludeKeys pulumi.StringArrayInput `pulumi:"accountIndexExcludeKeys"`
	AccountIndexIncludeKeys pulumi.StringArrayInput `pulumi:"accountIndexIncludeKeys"`
	AccountIndexes          pulumi.StringArrayInput `pulumi:"accountIndexes"`
	AccountsPath            pulumi.StringPtrInput   `pulumi:"accountsPath"`
	LimitSize               pulumi.IntPtrInput      `pulumi:"limitSize"`
	Path                    pulumi.StringPtrInput   `pulumi:"path"`
	RequireTower            pulumi.BoolPtrInput     `pulumi:"requireTower"`
	SnapshotArchiveFormat   pulumi.StringPtrInput   `pulumi:"snapshotArchiveFormat"`
}

func (ConfigLedgerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigLedger)(nil)).Elem()
}

func (i ConfigLedgerArgs) ToConfigLedgerOutput() ConfigLedgerOutput {
	return i.ToConfigLedgerOutputWithContext(context.Background())
}

func (i ConfigLedgerArgs) ToConfigLedgerOutputWithContext(ctx context.Context) ConfigLedgerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigLedgerOutput)
}

func (i ConfigLedgerArgs) ToConfigLedgerPtrOutput() ConfigLedgerPtrOutput {
	return i.ToConfigLedgerPtrOutputWithContext(context.Background())
}

func (i ConfigLedgerArgs) ToConfigLedgerPtrOutputWithContext(ctx context.Context) ConfigLedgerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigLedgerOutput).ToConfigLedgerPtrOutputWithContext(ctx)
}

// ConfigLedgerPtrInput is an input type that accepts ConfigLedgerArgs, ConfigLedgerPtr and ConfigLedgerPtrOutput values.
// You can construct a concrete instance of `ConfigLedgerPtrInput` via:
//
//	        ConfigLedgerArgs{...}
//
//	or:
//
//	        nil
type ConfigLedgerPtrInput interface {
	pulumi.Input

	ToConfigLedgerPtrOutput() ConfigLedgerPtrOutput
	ToConfigLedgerPtrOutputWithContext(context.Context) ConfigLedgerPtrOutput
}

type configLedgerPtrType ConfigLedgerArgs

func ConfigLedgerPtr(v *ConfigLedgerArgs) ConfigLedgerPtrInput {
	return (*configLedgerPtrType)(v)
}

func (*configLedgerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigLedger)(nil)).Elem()
}

func (i *configLedgerPtrType) ToConfigLedgerPtrOutput() ConfigLedgerPtrOutput {
	return i.ToConfigLedgerPtrOutputWithContext(context.Background())
}

func (i *configLedgerPtrType) ToConfigLedgerPtrOutputWithContext(ctx context.Context) ConfigLedgerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigLedgerPtrOutput)
}

type ConfigLedgerOutput struct{ *pulumi.OutputState }

func (ConfigLedgerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigLedger)(nil)).Elem()
}

func (o ConfigLedgerOutput) ToConfigLedgerOutput() ConfigLedgerOutput {
	return o
}

func (o ConfigLedgerOutput) ToConfigLedgerOutputWithContext(ctx context.Context) ConfigLedgerOutput {
	return o
}

func (o ConfigLedgerOutput) ToConfigLedgerPtrOutput() ConfigLedgerPtrOutput {
	return o.ToConfigLedgerPtrOutputWithContext(context.Background())
}

func (o ConfigLedgerOutput) ToConfigLedgerPtrOutputWithContext(ctx context.Context) ConfigLedgerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigLedger) *ConfigLedger {
		return &v
	}).(ConfigLedgerPtrOutput)
}

func (o ConfigLedgerOutput) AccountIndexExcludeKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigLedger) []string { return v.AccountIndexExcludeKeys }).(pulumi.StringArrayOutput)
}

func (o ConfigLedgerOutput) AccountIndexIncludeKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigLedger) []string { return v.AccountIndexIncludeKeys }).(pulumi.StringArrayOutput)
}

func (o ConfigLedgerOutput) AccountIndexes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigLedger) []string { return v.AccountIndexes }).(pulumi.StringArrayOutput)
}

func (o ConfigLedgerOutput) AccountsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigLedger) *string { return v.AccountsPath }).(pulumi.StringPtrOutput)
}

func (o ConfigLedgerOutput) LimitSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigLedger) *int { return v.LimitSize }).(pulumi.IntPtrOutput)
}

func (o ConfigLedgerOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigLedger) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o ConfigLedgerOutput) RequireTower() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigLedger) *bool { return v.RequireTower }).(pulumi.BoolPtrOutput)
}

func (o ConfigLedgerOutput) SnapshotArchiveFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigLedger) *string { return v.SnapshotArchiveFormat }).(pulumi.StringPtrOutput)
}

type ConfigLedgerPtrOutput struct{ *pulumi.OutputState }

func (ConfigLedgerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigLedger)(nil)).Elem()
}

func (o ConfigLedgerPtrOutput) ToConfigLedgerPtrOutput() ConfigLedgerPtrOutput {
	return o
}

func (o ConfigLedgerPtrOutput) ToConfigLedgerPtrOutputWithContext(ctx context.Context) ConfigLedgerPtrOutput {
	return o
}

func (o ConfigLedgerPtrOutput) Elem() ConfigLedgerOutput {
	return o.ApplyT(func(v *ConfigLedger) ConfigLedger {
		if v != nil {
			return *v
		}
		var ret ConfigLedger
		return ret
	}).(ConfigLedgerOutput)
}

func (o ConfigLedgerPtrOutput) AccountIndexExcludeKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigLedger) []string {
		if v == nil {
			return nil
		}
		return v.AccountIndexExcludeKeys
	}).(pulumi.StringArrayOutput)
}

func (o ConfigLedgerPtrOutput) AccountIndexIncludeKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigLedger) []string {
		if v == nil {
			return nil
		}
		return v.AccountIndexIncludeKeys
	}).(pulumi.StringArrayOutput)
}

func (o ConfigLedgerPtrOutput) AccountIndexes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigLedger) []string {
		if v == nil {
			return nil
		}
		return v.AccountIndexes
	}).(pulumi.StringArrayOutput)
}

func (o ConfigLedgerPtrOutput) AccountsPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigLedger) *string {
		if v == nil {
			return nil
		}
		return v.AccountsPath
	}).(pulumi.StringPtrOutput)
}

func (o ConfigLedgerPtrOutput) LimitSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigLedger) *int {
		if v == nil {
			return nil
		}
		return v.LimitSize
	}).(pulumi.IntPtrOutput)
}

func (o ConfigLedgerPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigLedger) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o ConfigLedgerPtrOutput) RequireTower() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigLedger) *bool {
		if v == nil {
			return nil
		}
		return v.RequireTower
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigLedgerPtrOutput) SnapshotArchiveFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigLedger) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotArchiveFormat
	}).(pulumi.StringPtrOutput)
}

type ConfigLog struct {
	Colorize     *string `pulumi:"colorize"`
	LevelFlush   *string `pulumi:"levelFlush"`
	LevelLogfile *string `pulumi:"levelLogfile"`
	LevelStderr  *string `pulumi:"levelStderr"`
	Path         *string `pulumi:"path"`
}

// ConfigLogInput is an input type that accepts ConfigLogArgs and ConfigLogOutput values.
// You can construct a concrete instance of `ConfigLogInput` via:
//
//	ConfigLogArgs{...}
type ConfigLogInput interface {
	pulumi.Input

	ToConfigLogOutput() ConfigLogOutput
	ToConfigLogOutputWithContext(context.Context) ConfigLogOutput
}

type ConfigLogArgs struct {
	Colorize     pulumi.StringPtrInput `pulumi:"colorize"`
	LevelFlush   pulumi.StringPtrInput `pulumi:"levelFlush"`
	LevelLogfile pulumi.StringPtrInput `pulumi:"levelLogfile"`
	LevelStderr  pulumi.StringPtrInput `pulumi:"levelStderr"`
	Path         pulumi.StringPtrInput `pulumi:"path"`
}

func (ConfigLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigLog)(nil)).Elem()
}

func (i ConfigLogArgs) ToConfigLogOutput() ConfigLogOutput {
	return i.ToConfigLogOutputWithContext(context.Background())
}

func (i ConfigLogArgs) ToConfigLogOutputWithContext(ctx context.Context) ConfigLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigLogOutput)
}

func (i ConfigLogArgs) ToConfigLogPtrOutput() ConfigLogPtrOutput {
	return i.ToConfigLogPtrOutputWithContext(context.Background())
}

func (i ConfigLogArgs) ToConfigLogPtrOutputWithContext(ctx context.Context) ConfigLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigLogOutput).ToConfigLogPtrOutputWithContext(ctx)
}

// ConfigLogPtrInput is an input type that accepts ConfigLogArgs, ConfigLogPtr and ConfigLogPtrOutput values.
// You can construct a concrete instance of `ConfigLogPtrInput` via:
//
//	        ConfigLogArgs{...}
//
//	or:
//
//	        nil
type ConfigLogPtrInput interface {
	pulumi.Input

	ToConfigLogPtrOutput() ConfigLogPtrOutput
	ToConfigLogPtrOutputWithContext(context.Context) ConfigLogPtrOutput
}

type configLogPtrType ConfigLogArgs

func ConfigLogPtr(v *ConfigLogArgs) ConfigLogPtrInput {
	return (*configLogPtrType)(v)
}

func (*configLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigLog)(nil)).Elem()
}

func (i *configLogPtrType) ToConfigLogPtrOutput() ConfigLogPtrOutput {
	return i.ToConfigLogPtrOutputWithContext(context.Background())
}

func (i *configLogPtrType) ToConfigLogPtrOutputWithContext(ctx context.Context) ConfigLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigLogPtrOutput)
}

type ConfigLogOutput struct{ *pulumi.OutputState }

func (ConfigLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigLog)(nil)).Elem()
}

func (o ConfigLogOutput) ToConfigLogOutput() ConfigLogOutput {
	return o
}

func (o ConfigLogOutput) ToConfigLogOutputWithContext(ctx context.Context) ConfigLogOutput {
	return o
}

func (o ConfigLogOutput) ToConfigLogPtrOutput() ConfigLogPtrOutput {
	return o.ToConfigLogPtrOutputWithContext(context.Background())
}

func (o ConfigLogOutput) ToConfigLogPtrOutputWithContext(ctx context.Context) ConfigLogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigLog) *ConfigLog {
		return &v
	}).(ConfigLogPtrOutput)
}

func (o ConfigLogOutput) Colorize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigLog) *string { return v.Colorize }).(pulumi.StringPtrOutput)
}

func (o ConfigLogOutput) LevelFlush() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigLog) *string { return v.LevelFlush }).(pulumi.StringPtrOutput)
}

func (o ConfigLogOutput) LevelLogfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigLog) *string { return v.LevelLogfile }).(pulumi.StringPtrOutput)
}

func (o ConfigLogOutput) LevelStderr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigLog) *string { return v.LevelStderr }).(pulumi.StringPtrOutput)
}

func (o ConfigLogOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigLog) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ConfigLogPtrOutput struct{ *pulumi.OutputState }

func (ConfigLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigLog)(nil)).Elem()
}

func (o ConfigLogPtrOutput) ToConfigLogPtrOutput() ConfigLogPtrOutput {
	return o
}

func (o ConfigLogPtrOutput) ToConfigLogPtrOutputWithContext(ctx context.Context) ConfigLogPtrOutput {
	return o
}

func (o ConfigLogPtrOutput) Elem() ConfigLogOutput {
	return o.ApplyT(func(v *ConfigLog) ConfigLog {
		if v != nil {
			return *v
		}
		var ret ConfigLog
		return ret
	}).(ConfigLogOutput)
}

func (o ConfigLogPtrOutput) Colorize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigLog) *string {
		if v == nil {
			return nil
		}
		return v.Colorize
	}).(pulumi.StringPtrOutput)
}

func (o ConfigLogPtrOutput) LevelFlush() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigLog) *string {
		if v == nil {
			return nil
		}
		return v.LevelFlush
	}).(pulumi.StringPtrOutput)
}

func (o ConfigLogPtrOutput) LevelLogfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigLog) *string {
		if v == nil {
			return nil
		}
		return v.LevelLogfile
	}).(pulumi.StringPtrOutput)
}

func (o ConfigLogPtrOutput) LevelStderr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigLog) *string {
		if v == nil {
			return nil
		}
		return v.LevelStderr
	}).(pulumi.StringPtrOutput)
}

func (o ConfigLogPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigLog) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type ConfigRPC struct {
	BigtableLedgerStorage         *bool `pulumi:"bigtableLedgerStorage"`
	ExtendedTxMetadataStorage     *bool `pulumi:"extendedTxMetadataStorage"`
	FullApi                       *bool `pulumi:"fullApi"`
	OnlyKnown                     *bool `pulumi:"onlyKnown"`
	Port                          *int  `pulumi:"port"`
	Private                       *bool `pulumi:"private"`
	PubsubEnableBlockSubscription *bool `pulumi:"pubsubEnableBlockSubscription"`
	PubsubEnableVoteSubscription  *bool `pulumi:"pubsubEnableVoteSubscription"`
	TransactionHistory            *bool `pulumi:"transactionHistory"`
}

// ConfigRPCInput is an input type that accepts ConfigRPCArgs and ConfigRPCOutput values.
// You can construct a concrete instance of `ConfigRPCInput` via:
//
//	ConfigRPCArgs{...}
type ConfigRPCInput interface {
	pulumi.Input

	ToConfigRPCOutput() ConfigRPCOutput
	ToConfigRPCOutputWithContext(context.Context) ConfigRPCOutput
}

type ConfigRPCArgs struct {
	BigtableLedgerStorage         pulumi.BoolPtrInput `pulumi:"bigtableLedgerStorage"`
	ExtendedTxMetadataStorage     pulumi.BoolPtrInput `pulumi:"extendedTxMetadataStorage"`
	FullApi                       pulumi.BoolPtrInput `pulumi:"fullApi"`
	OnlyKnown                     pulumi.BoolPtrInput `pulumi:"onlyKnown"`
	Port                          pulumi.IntPtrInput  `pulumi:"port"`
	Private                       pulumi.BoolPtrInput `pulumi:"private"`
	PubsubEnableBlockSubscription pulumi.BoolPtrInput `pulumi:"pubsubEnableBlockSubscription"`
	PubsubEnableVoteSubscription  pulumi.BoolPtrInput `pulumi:"pubsubEnableVoteSubscription"`
	TransactionHistory            pulumi.BoolPtrInput `pulumi:"transactionHistory"`
}

func (ConfigRPCArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRPC)(nil)).Elem()
}

func (i ConfigRPCArgs) ToConfigRPCOutput() ConfigRPCOutput {
	return i.ToConfigRPCOutputWithContext(context.Background())
}

func (i ConfigRPCArgs) ToConfigRPCOutputWithContext(ctx context.Context) ConfigRPCOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRPCOutput)
}

func (i ConfigRPCArgs) ToConfigRPCPtrOutput() ConfigRPCPtrOutput {
	return i.ToConfigRPCPtrOutputWithContext(context.Background())
}

func (i ConfigRPCArgs) ToConfigRPCPtrOutputWithContext(ctx context.Context) ConfigRPCPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRPCOutput).ToConfigRPCPtrOutputWithContext(ctx)
}

// ConfigRPCPtrInput is an input type that accepts ConfigRPCArgs, ConfigRPCPtr and ConfigRPCPtrOutput values.
// You can construct a concrete instance of `ConfigRPCPtrInput` via:
//
//	        ConfigRPCArgs{...}
//
//	or:
//
//	        nil
type ConfigRPCPtrInput interface {
	pulumi.Input

	ToConfigRPCPtrOutput() ConfigRPCPtrOutput
	ToConfigRPCPtrOutputWithContext(context.Context) ConfigRPCPtrOutput
}

type configRPCPtrType ConfigRPCArgs

func ConfigRPCPtr(v *ConfigRPCArgs) ConfigRPCPtrInput {
	return (*configRPCPtrType)(v)
}

func (*configRPCPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigRPC)(nil)).Elem()
}

func (i *configRPCPtrType) ToConfigRPCPtrOutput() ConfigRPCPtrOutput {
	return i.ToConfigRPCPtrOutputWithContext(context.Background())
}

func (i *configRPCPtrType) ToConfigRPCPtrOutputWithContext(ctx context.Context) ConfigRPCPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRPCPtrOutput)
}

type ConfigRPCOutput struct{ *pulumi.OutputState }

func (ConfigRPCOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRPC)(nil)).Elem()
}

func (o ConfigRPCOutput) ToConfigRPCOutput() ConfigRPCOutput {
	return o
}

func (o ConfigRPCOutput) ToConfigRPCOutputWithContext(ctx context.Context) ConfigRPCOutput {
	return o
}

func (o ConfigRPCOutput) ToConfigRPCPtrOutput() ConfigRPCPtrOutput {
	return o.ToConfigRPCPtrOutputWithContext(context.Background())
}

func (o ConfigRPCOutput) ToConfigRPCPtrOutputWithContext(ctx context.Context) ConfigRPCPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigRPC) *ConfigRPC {
		return &v
	}).(ConfigRPCPtrOutput)
}

func (o ConfigRPCOutput) BigtableLedgerStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigRPC) *bool { return v.BigtableLedgerStorage }).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCOutput) ExtendedTxMetadataStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigRPC) *bool { return v.ExtendedTxMetadataStorage }).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCOutput) FullApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigRPC) *bool { return v.FullApi }).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCOutput) OnlyKnown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigRPC) *bool { return v.OnlyKnown }).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigRPC) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ConfigRPCOutput) Private() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigRPC) *bool { return v.Private }).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCOutput) PubsubEnableBlockSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigRPC) *bool { return v.PubsubEnableBlockSubscription }).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCOutput) PubsubEnableVoteSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigRPC) *bool { return v.PubsubEnableVoteSubscription }).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCOutput) TransactionHistory() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigRPC) *bool { return v.TransactionHistory }).(pulumi.BoolPtrOutput)
}

type ConfigRPCPtrOutput struct{ *pulumi.OutputState }

func (ConfigRPCPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigRPC)(nil)).Elem()
}

func (o ConfigRPCPtrOutput) ToConfigRPCPtrOutput() ConfigRPCPtrOutput {
	return o
}

func (o ConfigRPCPtrOutput) ToConfigRPCPtrOutputWithContext(ctx context.Context) ConfigRPCPtrOutput {
	return o
}

func (o ConfigRPCPtrOutput) Elem() ConfigRPCOutput {
	return o.ApplyT(func(v *ConfigRPC) ConfigRPC {
		if v != nil {
			return *v
		}
		var ret ConfigRPC
		return ret
	}).(ConfigRPCOutput)
}

func (o ConfigRPCPtrOutput) BigtableLedgerStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigRPC) *bool {
		if v == nil {
			return nil
		}
		return v.BigtableLedgerStorage
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCPtrOutput) ExtendedTxMetadataStorage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigRPC) *bool {
		if v == nil {
			return nil
		}
		return v.ExtendedTxMetadataStorage
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCPtrOutput) FullApi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigRPC) *bool {
		if v == nil {
			return nil
		}
		return v.FullApi
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCPtrOutput) OnlyKnown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigRPC) *bool {
		if v == nil {
			return nil
		}
		return v.OnlyKnown
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigRPC) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o ConfigRPCPtrOutput) Private() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigRPC) *bool {
		if v == nil {
			return nil
		}
		return v.Private
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCPtrOutput) PubsubEnableBlockSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigRPC) *bool {
		if v == nil {
			return nil
		}
		return v.PubsubEnableBlockSubscription
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCPtrOutput) PubsubEnableVoteSubscription() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigRPC) *bool {
		if v == nil {
			return nil
		}
		return v.PubsubEnableVoteSubscription
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigRPCPtrOutput) TransactionHistory() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigRPC) *bool {
		if v == nil {
			return nil
		}
		return v.TransactionHistory
	}).(pulumi.BoolPtrOutput)
}

type ConfigReporting struct {
	SolanaMetricsConfig *string `pulumi:"solanaMetricsConfig"`
}

// ConfigReportingInput is an input type that accepts ConfigReportingArgs and ConfigReportingOutput values.
// You can construct a concrete instance of `ConfigReportingInput` via:
//
//	ConfigReportingArgs{...}
type ConfigReportingInput interface {
	pulumi.Input

	ToConfigReportingOutput() ConfigReportingOutput
	ToConfigReportingOutputWithContext(context.Context) ConfigReportingOutput
}

type ConfigReportingArgs struct {
	SolanaMetricsConfig pulumi.StringPtrInput `pulumi:"solanaMetricsConfig"`
}

func (ConfigReportingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigReporting)(nil)).Elem()
}

func (i ConfigReportingArgs) ToConfigReportingOutput() ConfigReportingOutput {
	return i.ToConfigReportingOutputWithContext(context.Background())
}

func (i ConfigReportingArgs) ToConfigReportingOutputWithContext(ctx context.Context) ConfigReportingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigReportingOutput)
}

func (i ConfigReportingArgs) ToConfigReportingPtrOutput() ConfigReportingPtrOutput {
	return i.ToConfigReportingPtrOutputWithContext(context.Background())
}

func (i ConfigReportingArgs) ToConfigReportingPtrOutputWithContext(ctx context.Context) ConfigReportingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigReportingOutput).ToConfigReportingPtrOutputWithContext(ctx)
}

// ConfigReportingPtrInput is an input type that accepts ConfigReportingArgs, ConfigReportingPtr and ConfigReportingPtrOutput values.
// You can construct a concrete instance of `ConfigReportingPtrInput` via:
//
//	        ConfigReportingArgs{...}
//
//	or:
//
//	        nil
type ConfigReportingPtrInput interface {
	pulumi.Input

	ToConfigReportingPtrOutput() ConfigReportingPtrOutput
	ToConfigReportingPtrOutputWithContext(context.Context) ConfigReportingPtrOutput
}

type configReportingPtrType ConfigReportingArgs

func ConfigReportingPtr(v *ConfigReportingArgs) ConfigReportingPtrInput {
	return (*configReportingPtrType)(v)
}

func (*configReportingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigReporting)(nil)).Elem()
}

func (i *configReportingPtrType) ToConfigReportingPtrOutput() ConfigReportingPtrOutput {
	return i.ToConfigReportingPtrOutputWithContext(context.Background())
}

func (i *configReportingPtrType) ToConfigReportingPtrOutputWithContext(ctx context.Context) ConfigReportingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigReportingPtrOutput)
}

type ConfigReportingOutput struct{ *pulumi.OutputState }

func (ConfigReportingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigReporting)(nil)).Elem()
}

func (o ConfigReportingOutput) ToConfigReportingOutput() ConfigReportingOutput {
	return o
}

func (o ConfigReportingOutput) ToConfigReportingOutputWithContext(ctx context.Context) ConfigReportingOutput {
	return o
}

func (o ConfigReportingOutput) ToConfigReportingPtrOutput() ConfigReportingPtrOutput {
	return o.ToConfigReportingPtrOutputWithContext(context.Background())
}

func (o ConfigReportingOutput) ToConfigReportingPtrOutputWithContext(ctx context.Context) ConfigReportingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigReporting) *ConfigReporting {
		return &v
	}).(ConfigReportingPtrOutput)
}

func (o ConfigReportingOutput) SolanaMetricsConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigReporting) *string { return v.SolanaMetricsConfig }).(pulumi.StringPtrOutput)
}

type ConfigReportingPtrOutput struct{ *pulumi.OutputState }

func (ConfigReportingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigReporting)(nil)).Elem()
}

func (o ConfigReportingPtrOutput) ToConfigReportingPtrOutput() ConfigReportingPtrOutput {
	return o
}

func (o ConfigReportingPtrOutput) ToConfigReportingPtrOutputWithContext(ctx context.Context) ConfigReportingPtrOutput {
	return o
}

func (o ConfigReportingPtrOutput) Elem() ConfigReportingOutput {
	return o.ApplyT(func(v *ConfigReporting) ConfigReporting {
		if v != nil {
			return *v
		}
		var ret ConfigReporting
		return ret
	}).(ConfigReportingOutput)
}

func (o ConfigReportingPtrOutput) SolanaMetricsConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigReporting) *string {
		if v == nil {
			return nil
		}
		return v.SolanaMetricsConfig
	}).(pulumi.StringPtrOutput)
}

type ConfigSnapshots struct {
	FullSnapshotIntervalSlots           *int    `pulumi:"fullSnapshotIntervalSlots"`
	IncrementalPath                     *string `pulumi:"incrementalPath"`
	IncrementalSnapshotIntervalSlots    *int    `pulumi:"incrementalSnapshotIntervalSlots"`
	IncrementalSnapshots                *bool   `pulumi:"incrementalSnapshots"`
	MaximumFullSnapshotsToRetain        *int    `pulumi:"maximumFullSnapshotsToRetain"`
	MaximumIncrementalSnapshotsToRetain *int    `pulumi:"maximumIncrementalSnapshotsToRetain"`
	MinimumSnapshotDownloadSpeed        *int    `pulumi:"minimumSnapshotDownloadSpeed"`
	Path                                *string `pulumi:"path"`
}

// ConfigSnapshotsInput is an input type that accepts ConfigSnapshotsArgs and ConfigSnapshotsOutput values.
// You can construct a concrete instance of `ConfigSnapshotsInput` via:
//
//	ConfigSnapshotsArgs{...}
type ConfigSnapshotsInput interface {
	pulumi.Input

	ToConfigSnapshotsOutput() ConfigSnapshotsOutput
	ToConfigSnapshotsOutputWithContext(context.Context) ConfigSnapshotsOutput
}

type ConfigSnapshotsArgs struct {
	FullSnapshotIntervalSlots           pulumi.IntPtrInput    `pulumi:"fullSnapshotIntervalSlots"`
	IncrementalPath                     pulumi.StringPtrInput `pulumi:"incrementalPath"`
	IncrementalSnapshotIntervalSlots    pulumi.IntPtrInput    `pulumi:"incrementalSnapshotIntervalSlots"`
	IncrementalSnapshots                pulumi.BoolPtrInput   `pulumi:"incrementalSnapshots"`
	MaximumFullSnapshotsToRetain        pulumi.IntPtrInput    `pulumi:"maximumFullSnapshotsToRetain"`
	MaximumIncrementalSnapshotsToRetain pulumi.IntPtrInput    `pulumi:"maximumIncrementalSnapshotsToRetain"`
	MinimumSnapshotDownloadSpeed        pulumi.IntPtrInput    `pulumi:"minimumSnapshotDownloadSpeed"`
	Path                                pulumi.StringPtrInput `pulumi:"path"`
}

func (ConfigSnapshotsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigSnapshots)(nil)).Elem()
}

func (i ConfigSnapshotsArgs) ToConfigSnapshotsOutput() ConfigSnapshotsOutput {
	return i.ToConfigSnapshotsOutputWithContext(context.Background())
}

func (i ConfigSnapshotsArgs) ToConfigSnapshotsOutputWithContext(ctx context.Context) ConfigSnapshotsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigSnapshotsOutput)
}

func (i ConfigSnapshotsArgs) ToConfigSnapshotsPtrOutput() ConfigSnapshotsPtrOutput {
	return i.ToConfigSnapshotsPtrOutputWithContext(context.Background())
}

func (i ConfigSnapshotsArgs) ToConfigSnapshotsPtrOutputWithContext(ctx context.Context) ConfigSnapshotsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigSnapshotsOutput).ToConfigSnapshotsPtrOutputWithContext(ctx)
}

// ConfigSnapshotsPtrInput is an input type that accepts ConfigSnapshotsArgs, ConfigSnapshotsPtr and ConfigSnapshotsPtrOutput values.
// You can construct a concrete instance of `ConfigSnapshotsPtrInput` via:
//
//	        ConfigSnapshotsArgs{...}
//
//	or:
//
//	        nil
type ConfigSnapshotsPtrInput interface {
	pulumi.Input

	ToConfigSnapshotsPtrOutput() ConfigSnapshotsPtrOutput
	ToConfigSnapshotsPtrOutputWithContext(context.Context) ConfigSnapshotsPtrOutput
}

type configSnapshotsPtrType ConfigSnapshotsArgs

func ConfigSnapshotsPtr(v *ConfigSnapshotsArgs) ConfigSnapshotsPtrInput {
	return (*configSnapshotsPtrType)(v)
}

func (*configSnapshotsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigSnapshots)(nil)).Elem()
}

func (i *configSnapshotsPtrType) ToConfigSnapshotsPtrOutput() ConfigSnapshotsPtrOutput {
	return i.ToConfigSnapshotsPtrOutputWithContext(context.Background())
}

func (i *configSnapshotsPtrType) ToConfigSnapshotsPtrOutputWithContext(ctx context.Context) ConfigSnapshotsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigSnapshotsPtrOutput)
}

type ConfigSnapshotsOutput struct{ *pulumi.OutputState }

func (ConfigSnapshotsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigSnapshots)(nil)).Elem()
}

func (o ConfigSnapshotsOutput) ToConfigSnapshotsOutput() ConfigSnapshotsOutput {
	return o
}

func (o ConfigSnapshotsOutput) ToConfigSnapshotsOutputWithContext(ctx context.Context) ConfigSnapshotsOutput {
	return o
}

func (o ConfigSnapshotsOutput) ToConfigSnapshotsPtrOutput() ConfigSnapshotsPtrOutput {
	return o.ToConfigSnapshotsPtrOutputWithContext(context.Background())
}

func (o ConfigSnapshotsOutput) ToConfigSnapshotsPtrOutputWithContext(ctx context.Context) ConfigSnapshotsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigSnapshots) *ConfigSnapshots {
		return &v
	}).(ConfigSnapshotsPtrOutput)
}

func (o ConfigSnapshotsOutput) FullSnapshotIntervalSlots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigSnapshots) *int { return v.FullSnapshotIntervalSlots }).(pulumi.IntPtrOutput)
}

func (o ConfigSnapshotsOutput) IncrementalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigSnapshots) *string { return v.IncrementalPath }).(pulumi.StringPtrOutput)
}

func (o ConfigSnapshotsOutput) IncrementalSnapshotIntervalSlots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigSnapshots) *int { return v.IncrementalSnapshotIntervalSlots }).(pulumi.IntPtrOutput)
}

func (o ConfigSnapshotsOutput) IncrementalSnapshots() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigSnapshots) *bool { return v.IncrementalSnapshots }).(pulumi.BoolPtrOutput)
}

func (o ConfigSnapshotsOutput) MaximumFullSnapshotsToRetain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigSnapshots) *int { return v.MaximumFullSnapshotsToRetain }).(pulumi.IntPtrOutput)
}

func (o ConfigSnapshotsOutput) MaximumIncrementalSnapshotsToRetain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigSnapshots) *int { return v.MaximumIncrementalSnapshotsToRetain }).(pulumi.IntPtrOutput)
}

func (o ConfigSnapshotsOutput) MinimumSnapshotDownloadSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigSnapshots) *int { return v.MinimumSnapshotDownloadSpeed }).(pulumi.IntPtrOutput)
}

func (o ConfigSnapshotsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigSnapshots) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ConfigSnapshotsPtrOutput struct{ *pulumi.OutputState }

func (ConfigSnapshotsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigSnapshots)(nil)).Elem()
}

func (o ConfigSnapshotsPtrOutput) ToConfigSnapshotsPtrOutput() ConfigSnapshotsPtrOutput {
	return o
}

func (o ConfigSnapshotsPtrOutput) ToConfigSnapshotsPtrOutputWithContext(ctx context.Context) ConfigSnapshotsPtrOutput {
	return o
}

func (o ConfigSnapshotsPtrOutput) Elem() ConfigSnapshotsOutput {
	return o.ApplyT(func(v *ConfigSnapshots) ConfigSnapshots {
		if v != nil {
			return *v
		}
		var ret ConfigSnapshots
		return ret
	}).(ConfigSnapshotsOutput)
}

func (o ConfigSnapshotsPtrOutput) FullSnapshotIntervalSlots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigSnapshots) *int {
		if v == nil {
			return nil
		}
		return v.FullSnapshotIntervalSlots
	}).(pulumi.IntPtrOutput)
}

func (o ConfigSnapshotsPtrOutput) IncrementalPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigSnapshots) *string {
		if v == nil {
			return nil
		}
		return v.IncrementalPath
	}).(pulumi.StringPtrOutput)
}

func (o ConfigSnapshotsPtrOutput) IncrementalSnapshotIntervalSlots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigSnapshots) *int {
		if v == nil {
			return nil
		}
		return v.IncrementalSnapshotIntervalSlots
	}).(pulumi.IntPtrOutput)
}

func (o ConfigSnapshotsPtrOutput) IncrementalSnapshots() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigSnapshots) *bool {
		if v == nil {
			return nil
		}
		return v.IncrementalSnapshots
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigSnapshotsPtrOutput) MaximumFullSnapshotsToRetain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigSnapshots) *int {
		if v == nil {
			return nil
		}
		return v.MaximumFullSnapshotsToRetain
	}).(pulumi.IntPtrOutput)
}

func (o ConfigSnapshotsPtrOutput) MaximumIncrementalSnapshotsToRetain() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigSnapshots) *int {
		if v == nil {
			return nil
		}
		return v.MaximumIncrementalSnapshotsToRetain
	}).(pulumi.IntPtrOutput)
}

func (o ConfigSnapshotsPtrOutput) MinimumSnapshotDownloadSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigSnapshots) *int {
		if v == nil {
			return nil
		}
		return v.MinimumSnapshotDownloadSpeed
	}).(pulumi.IntPtrOutput)
}

func (o ConfigSnapshotsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigSnapshots) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type KeyPairs struct {
	Identity    string `pulumi:"identity"`
	VoteAccount string `pulumi:"voteAccount"`
}

// KeyPairsInput is an input type that accepts KeyPairsArgs and KeyPairsOutput values.
// You can construct a concrete instance of `KeyPairsInput` via:
//
//	KeyPairsArgs{...}
type KeyPairsInput interface {
	pulumi.Input

	ToKeyPairsOutput() KeyPairsOutput
	ToKeyPairsOutputWithContext(context.Context) KeyPairsOutput
}

type KeyPairsArgs struct {
	Identity    pulumi.StringInput `pulumi:"identity"`
	VoteAccount pulumi.StringInput `pulumi:"voteAccount"`
}

func (KeyPairsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyPairs)(nil)).Elem()
}

func (i KeyPairsArgs) ToKeyPairsOutput() KeyPairsOutput {
	return i.ToKeyPairsOutputWithContext(context.Background())
}

func (i KeyPairsArgs) ToKeyPairsOutputWithContext(ctx context.Context) KeyPairsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyPairsOutput)
}

type KeyPairsOutput struct{ *pulumi.OutputState }

func (KeyPairsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyPairs)(nil)).Elem()
}

func (o KeyPairsOutput) ToKeyPairsOutput() KeyPairsOutput {
	return o
}

func (o KeyPairsOutput) ToKeyPairsOutputWithContext(ctx context.Context) KeyPairsOutput {
	return o
}

func (o KeyPairsOutput) Identity() pulumi.StringOutput {
	return o.ApplyT(func(v KeyPairs) string { return v.Identity }).(pulumi.StringOutput)
}

func (o KeyPairsOutput) VoteAccount() pulumi.StringOutput {
	return o.ApplyT(func(v KeyPairs) string { return v.VoteAccount }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigInput)(nil)).Elem(), ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConsensusInput)(nil)).Elem(), ConfigConsensusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigConsensusPtrInput)(nil)).Elem(), ConfigConsensusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigGossipInput)(nil)).Elem(), ConfigGossipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigGossipPtrInput)(nil)).Elem(), ConfigGossipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigHugeTLBFSInput)(nil)).Elem(), ConfigHugeTLBFSArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigHugeTLBFSPtrInput)(nil)).Elem(), ConfigHugeTLBFSArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigLayoutInput)(nil)).Elem(), ConfigLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigLayoutPtrInput)(nil)).Elem(), ConfigLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigLedgerInput)(nil)).Elem(), ConfigLedgerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigLedgerPtrInput)(nil)).Elem(), ConfigLedgerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigLogInput)(nil)).Elem(), ConfigLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigLogPtrInput)(nil)).Elem(), ConfigLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRPCInput)(nil)).Elem(), ConfigRPCArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRPCPtrInput)(nil)).Elem(), ConfigRPCArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigReportingInput)(nil)).Elem(), ConfigReportingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigReportingPtrInput)(nil)).Elem(), ConfigReportingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigSnapshotsInput)(nil)).Elem(), ConfigSnapshotsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigSnapshotsPtrInput)(nil)).Elem(), ConfigSnapshotsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyPairsInput)(nil)).Elem(), KeyPairsArgs{})
	pulumi.RegisterOutputType(ConfigOutput{})
	pulumi.RegisterOutputType(ConfigConsensusOutput{})
	pulumi.RegisterOutputType(ConfigConsensusPtrOutput{})
	pulumi.RegisterOutputType(ConfigGossipOutput{})
	pulumi.RegisterOutputType(ConfigGossipPtrOutput{})
	pulumi.RegisterOutputType(ConfigHugeTLBFSOutput{})
	pulumi.RegisterOutputType(ConfigHugeTLBFSPtrOutput{})
	pulumi.RegisterOutputType(ConfigLayoutOutput{})
	pulumi.RegisterOutputType(ConfigLayoutPtrOutput{})
	pulumi.RegisterOutputType(ConfigLedgerOutput{})
	pulumi.RegisterOutputType(ConfigLedgerPtrOutput{})
	pulumi.RegisterOutputType(ConfigLogOutput{})
	pulumi.RegisterOutputType(ConfigLogPtrOutput{})
	pulumi.RegisterOutputType(ConfigRPCOutput{})
	pulumi.RegisterOutputType(ConfigRPCPtrOutput{})
	pulumi.RegisterOutputType(ConfigReportingOutput{})
	pulumi.RegisterOutputType(ConfigReportingPtrOutput{})
	pulumi.RegisterOutputType(ConfigSnapshotsOutput{})
	pulumi.RegisterOutputType(ConfigSnapshotsPtrOutput{})
	pulumi.RegisterOutputType(KeyPairsOutput{})
}
