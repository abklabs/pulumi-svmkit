// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package solana

import (
	"context"
	"reflect"

	"github.com/abklabs/pulumi-svmkit/sdk/go/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type Environment struct {
	RpcURL string `pulumi:"rpcURL"`
}

// EnvironmentInput is an input type that accepts EnvironmentArgs and EnvironmentOutput values.
// You can construct a concrete instance of `EnvironmentInput` via:
//
//	EnvironmentArgs{...}
type EnvironmentInput interface {
	pulumi.Input

	ToEnvironmentOutput() EnvironmentOutput
	ToEnvironmentOutputWithContext(context.Context) EnvironmentOutput
}

type EnvironmentArgs struct {
	RpcURL pulumi.StringInput `pulumi:"rpcURL"`
}

func (EnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Environment)(nil)).Elem()
}

func (i EnvironmentArgs) ToEnvironmentOutput() EnvironmentOutput {
	return i.ToEnvironmentOutputWithContext(context.Background())
}

func (i EnvironmentArgs) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOutput)
}

func (i EnvironmentArgs) ToEnvironmentPtrOutput() EnvironmentPtrOutput {
	return i.ToEnvironmentPtrOutputWithContext(context.Background())
}

func (i EnvironmentArgs) ToEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOutput).ToEnvironmentPtrOutputWithContext(ctx)
}

// EnvironmentPtrInput is an input type that accepts EnvironmentArgs, EnvironmentPtr and EnvironmentPtrOutput values.
// You can construct a concrete instance of `EnvironmentPtrInput` via:
//
//	        EnvironmentArgs{...}
//
//	or:
//
//	        nil
type EnvironmentPtrInput interface {
	pulumi.Input

	ToEnvironmentPtrOutput() EnvironmentPtrOutput
	ToEnvironmentPtrOutputWithContext(context.Context) EnvironmentPtrOutput
}

type environmentPtrType EnvironmentArgs

func EnvironmentPtr(v *EnvironmentArgs) EnvironmentPtrInput {
	return (*environmentPtrType)(v)
}

func (*environmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (i *environmentPtrType) ToEnvironmentPtrOutput() EnvironmentPtrOutput {
	return i.ToEnvironmentPtrOutputWithContext(context.Background())
}

func (i *environmentPtrType) ToEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentPtrOutput)
}

type EnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Environment)(nil)).Elem()
}

func (o EnvironmentOutput) ToEnvironmentOutput() EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) ToEnvironmentPtrOutput() EnvironmentPtrOutput {
	return o.ToEnvironmentPtrOutputWithContext(context.Background())
}

func (o EnvironmentOutput) ToEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Environment) *Environment {
		return &v
	}).(EnvironmentPtrOutput)
}

func (o EnvironmentOutput) RpcURL() pulumi.StringOutput {
	return o.ApplyT(func(v Environment) string { return v.RpcURL }).(pulumi.StringOutput)
}

type EnvironmentPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (o EnvironmentPtrOutput) ToEnvironmentPtrOutput() EnvironmentPtrOutput {
	return o
}

func (o EnvironmentPtrOutput) ToEnvironmentPtrOutputWithContext(ctx context.Context) EnvironmentPtrOutput {
	return o
}

func (o EnvironmentPtrOutput) Elem() EnvironmentOutput {
	return o.ApplyT(func(v *Environment) Environment {
		if v != nil {
			return *v
		}
		var ret Environment
		return ret
	}).(EnvironmentOutput)
}

func (o EnvironmentPtrOutput) RpcURL() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) *string {
		if v == nil {
			return nil
		}
		return &v.RpcURL
	}).(pulumi.StringPtrOutput)
}

type GenesisFlags struct {
	ClusterType                *string `pulumi:"clusterType"`
	FaucetLamports             *string `pulumi:"faucetLamports"`
	FaucetPubkey               string  `pulumi:"faucetPubkey"`
	IdentityPubkey             string  `pulumi:"identityPubkey"`
	Inflation                  *string `pulumi:"inflation"`
	LamportsPerByteYear        *string `pulumi:"lamportsPerByteYear"`
	LedgerPath                 string  `pulumi:"ledgerPath"`
	SlotPerEpoch               *string `pulumi:"slotPerEpoch"`
	StakePubkey                string  `pulumi:"stakePubkey"`
	TargetLamportsPerSignature *string `pulumi:"targetLamportsPerSignature"`
	VotePubkey                 string  `pulumi:"votePubkey"`
}

// GenesisFlagsInput is an input type that accepts GenesisFlagsArgs and GenesisFlagsOutput values.
// You can construct a concrete instance of `GenesisFlagsInput` via:
//
//	GenesisFlagsArgs{...}
type GenesisFlagsInput interface {
	pulumi.Input

	ToGenesisFlagsOutput() GenesisFlagsOutput
	ToGenesisFlagsOutputWithContext(context.Context) GenesisFlagsOutput
}

type GenesisFlagsArgs struct {
	ClusterType                pulumi.StringPtrInput `pulumi:"clusterType"`
	FaucetLamports             pulumi.StringPtrInput `pulumi:"faucetLamports"`
	FaucetPubkey               pulumi.StringInput    `pulumi:"faucetPubkey"`
	IdentityPubkey             pulumi.StringInput    `pulumi:"identityPubkey"`
	Inflation                  pulumi.StringPtrInput `pulumi:"inflation"`
	LamportsPerByteYear        pulumi.StringPtrInput `pulumi:"lamportsPerByteYear"`
	LedgerPath                 pulumi.StringInput    `pulumi:"ledgerPath"`
	SlotPerEpoch               pulumi.StringPtrInput `pulumi:"slotPerEpoch"`
	StakePubkey                pulumi.StringInput    `pulumi:"stakePubkey"`
	TargetLamportsPerSignature pulumi.StringPtrInput `pulumi:"targetLamportsPerSignature"`
	VotePubkey                 pulumi.StringInput    `pulumi:"votePubkey"`
}

func (GenesisFlagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GenesisFlags)(nil)).Elem()
}

func (i GenesisFlagsArgs) ToGenesisFlagsOutput() GenesisFlagsOutput {
	return i.ToGenesisFlagsOutputWithContext(context.Background())
}

func (i GenesisFlagsArgs) ToGenesisFlagsOutputWithContext(ctx context.Context) GenesisFlagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenesisFlagsOutput)
}

type GenesisFlagsOutput struct{ *pulumi.OutputState }

func (GenesisFlagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GenesisFlags)(nil)).Elem()
}

func (o GenesisFlagsOutput) ToGenesisFlagsOutput() GenesisFlagsOutput {
	return o
}

func (o GenesisFlagsOutput) ToGenesisFlagsOutputWithContext(ctx context.Context) GenesisFlagsOutput {
	return o
}

func (o GenesisFlagsOutput) ClusterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenesisFlags) *string { return v.ClusterType }).(pulumi.StringPtrOutput)
}

func (o GenesisFlagsOutput) FaucetLamports() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenesisFlags) *string { return v.FaucetLamports }).(pulumi.StringPtrOutput)
}

func (o GenesisFlagsOutput) FaucetPubkey() pulumi.StringOutput {
	return o.ApplyT(func(v GenesisFlags) string { return v.FaucetPubkey }).(pulumi.StringOutput)
}

func (o GenesisFlagsOutput) IdentityPubkey() pulumi.StringOutput {
	return o.ApplyT(func(v GenesisFlags) string { return v.IdentityPubkey }).(pulumi.StringOutput)
}

func (o GenesisFlagsOutput) Inflation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenesisFlags) *string { return v.Inflation }).(pulumi.StringPtrOutput)
}

func (o GenesisFlagsOutput) LamportsPerByteYear() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenesisFlags) *string { return v.LamportsPerByteYear }).(pulumi.StringPtrOutput)
}

func (o GenesisFlagsOutput) LedgerPath() pulumi.StringOutput {
	return o.ApplyT(func(v GenesisFlags) string { return v.LedgerPath }).(pulumi.StringOutput)
}

func (o GenesisFlagsOutput) SlotPerEpoch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenesisFlags) *string { return v.SlotPerEpoch }).(pulumi.StringPtrOutput)
}

func (o GenesisFlagsOutput) StakePubkey() pulumi.StringOutput {
	return o.ApplyT(func(v GenesisFlags) string { return v.StakePubkey }).(pulumi.StringOutput)
}

func (o GenesisFlagsOutput) TargetLamportsPerSignature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GenesisFlags) *string { return v.TargetLamportsPerSignature }).(pulumi.StringPtrOutput)
}

func (o GenesisFlagsOutput) VotePubkey() pulumi.StringOutput {
	return o.ApplyT(func(v GenesisFlags) string { return v.VotePubkey }).(pulumi.StringOutput)
}

type VoteAccountKeyPairs struct {
	AuthWithdrawer string `pulumi:"authWithdrawer"`
	Identity       string `pulumi:"identity"`
	VoteAccount    string `pulumi:"voteAccount"`
}

// VoteAccountKeyPairsInput is an input type that accepts VoteAccountKeyPairsArgs and VoteAccountKeyPairsOutput values.
// You can construct a concrete instance of `VoteAccountKeyPairsInput` via:
//
//	VoteAccountKeyPairsArgs{...}
type VoteAccountKeyPairsInput interface {
	pulumi.Input

	ToVoteAccountKeyPairsOutput() VoteAccountKeyPairsOutput
	ToVoteAccountKeyPairsOutputWithContext(context.Context) VoteAccountKeyPairsOutput
}

type VoteAccountKeyPairsArgs struct {
	AuthWithdrawer pulumi.StringInput `pulumi:"authWithdrawer"`
	Identity       pulumi.StringInput `pulumi:"identity"`
	VoteAccount    pulumi.StringInput `pulumi:"voteAccount"`
}

func (VoteAccountKeyPairsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VoteAccountKeyPairs)(nil)).Elem()
}

func (i VoteAccountKeyPairsArgs) ToVoteAccountKeyPairsOutput() VoteAccountKeyPairsOutput {
	return i.ToVoteAccountKeyPairsOutputWithContext(context.Background())
}

func (i VoteAccountKeyPairsArgs) ToVoteAccountKeyPairsOutputWithContext(ctx context.Context) VoteAccountKeyPairsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VoteAccountKeyPairsOutput)
}

type VoteAccountKeyPairsOutput struct{ *pulumi.OutputState }

func (VoteAccountKeyPairsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VoteAccountKeyPairs)(nil)).Elem()
}

func (o VoteAccountKeyPairsOutput) ToVoteAccountKeyPairsOutput() VoteAccountKeyPairsOutput {
	return o
}

func (o VoteAccountKeyPairsOutput) ToVoteAccountKeyPairsOutputWithContext(ctx context.Context) VoteAccountKeyPairsOutput {
	return o
}

func (o VoteAccountKeyPairsOutput) AuthWithdrawer() pulumi.StringOutput {
	return o.ApplyT(func(v VoteAccountKeyPairs) string { return v.AuthWithdrawer }).(pulumi.StringOutput)
}

func (o VoteAccountKeyPairsOutput) Identity() pulumi.StringOutput {
	return o.ApplyT(func(v VoteAccountKeyPairs) string { return v.Identity }).(pulumi.StringOutput)
}

func (o VoteAccountKeyPairsOutput) VoteAccount() pulumi.StringOutput {
	return o.ApplyT(func(v VoteAccountKeyPairs) string { return v.VoteAccount }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentInput)(nil)).Elem(), EnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentPtrInput)(nil)).Elem(), EnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GenesisFlagsInput)(nil)).Elem(), GenesisFlagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VoteAccountKeyPairsInput)(nil)).Elem(), VoteAccountKeyPairsArgs{})
	pulumi.RegisterOutputType(EnvironmentOutput{})
	pulumi.RegisterOutputType(EnvironmentPtrOutput{})
	pulumi.RegisterOutputType(GenesisFlagsOutput{})
	pulumi.RegisterOutputType(VoteAccountKeyPairsOutput{})
}
