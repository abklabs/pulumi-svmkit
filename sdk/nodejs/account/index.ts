// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { StakeAccountArgs } from "./stakeAccount";
export type StakeAccount = import("./stakeAccount").StakeAccount;
export const StakeAccount: typeof import("./stakeAccount").StakeAccount = null as any;
utilities.lazyLoad(exports, ["StakeAccount"], () => require("./stakeAccount"));

export { TransferArgs } from "./transfer";
export type Transfer = import("./transfer").Transfer;
export const Transfer: typeof import("./transfer").Transfer = null as any;
utilities.lazyLoad(exports, ["Transfer"], () => require("./transfer"));

export { VoteAccountArgs } from "./voteAccount";
export type VoteAccount = import("./voteAccount").VoteAccount;
export const VoteAccount: typeof import("./voteAccount").VoteAccount = null as any;
utilities.lazyLoad(exports, ["VoteAccount"], () => require("./voteAccount"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "svmkit:account:StakeAccount":
                return new StakeAccount(name, <any>undefined, { urn })
            case "svmkit:account:Transfer":
                return new Transfer(name, <any>undefined, { urn })
            case "svmkit:account:VoteAccount":
                return new VoteAccount(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("svmkit", "account", _module)
