// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export namespace agave {
    export interface ValidatorFlagsArgs {
        blockProductionMethod: pulumi.Input<string>;
        dynamicPortRange: pulumi.Input<string>;
        entryPoint: pulumi.Input<pulumi.Input<string>[]>;
        expectedGenesisHash: pulumi.Input<string>;
        fullRpcAPI: pulumi.Input<boolean>;
        fullSnapshotIntervalSlots: pulumi.Input<number>;
        gossipPort: pulumi.Input<number>;
        knownValidator: pulumi.Input<pulumi.Input<string>[]>;
        limitLedgerSize: pulumi.Input<number>;
        noVoting: pulumi.Input<boolean>;
        noWaitForVoteToStartLeader: pulumi.Input<boolean>;
        onlyKnownRPC: pulumi.Input<boolean>;
        paths: pulumi.Input<inputs.agave.ValidatorPathsArgs>;
        privateRPC: pulumi.Input<boolean>;
        rpcBindAddress: pulumi.Input<string>;
        rpcPort: pulumi.Input<number>;
        tvuReceiveThreads: pulumi.Input<number>;
        useSnapshotArchivesAtStartup: pulumi.Input<string>;
        walRecoveryMode: pulumi.Input<string>;
    }

    export interface ValidatorKeyPairsArgs {
        identity: pulumi.Input<string>;
        voteAccount: pulumi.Input<string>;
    }

    export interface ValidatorPathsArgs {
        accounts: pulumi.Input<string>;
        ledger: pulumi.Input<string>;
        log: pulumi.Input<string>;
    }
}
