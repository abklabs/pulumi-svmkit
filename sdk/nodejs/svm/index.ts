// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { KeyPairArgs } from "./keyPair";
export type KeyPair = import("./keyPair").KeyPair;
export const KeyPair: typeof import("./keyPair").KeyPair = null as any;
utilities.lazyLoad(exports, ["KeyPair"], () => require("./keyPair"));

export { ValidatorArgs } from "./validator";
export type Validator = import("./validator").Validator;
export const Validator: typeof import("./validator").Validator = null as any;
utilities.lazyLoad(exports, ["Validator"], () => require("./validator"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "svm:svm:KeyPair":
                return new KeyPair(name, <any>undefined, { urn })
            case "svm:svm:Validator":
                return new Validator(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("svm", "svm", _module)
