// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { FirewallArgs } from "./firewall";
export type Firewall = import("./firewall").Firewall;
export const Firewall: typeof import("./firewall").Firewall = null as any;
utilities.lazyLoad(exports, ["Firewall"], () => require("./firewall"));

export { GetDefaultFirewallParamsArgs, GetDefaultFirewallParamsResult, GetDefaultFirewallParamsOutputArgs } from "./getDefaultFirewallParams";
export const getDefaultFirewallParams: typeof import("./getDefaultFirewallParams").getDefaultFirewallParams = null as any;
export const getDefaultFirewallParamsOutput: typeof import("./getDefaultFirewallParams").getDefaultFirewallParamsOutput = null as any;
utilities.lazyLoad(exports, ["getDefaultFirewallParams","getDefaultFirewallParamsOutput"], () => require("./getDefaultFirewallParams"));


// Export enums:
export * from "../types/enums/firewall";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "svmkit:firewall:Firewall":
                return new Firewall(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("svmkit", "firewall", _module)
