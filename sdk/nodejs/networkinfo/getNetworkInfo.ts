// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getNetworkInfo(args: GetNetworkInfoArgs, opts?: pulumi.InvokeOptions): Promise<GetNetworkInfoResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("svmkit:networkinfo:getNetworkInfo", {
        "networkName": args.networkName,
    }, opts);
}

export interface GetNetworkInfoArgs {
    networkName: enums.solana.NetworkName;
}

export interface GetNetworkInfoResult {
    readonly entryPoint: string[];
    readonly genesisHash: string;
    readonly knownValidator: string[];
    readonly networkName: enums.solana.NetworkName;
    readonly rpcURL: string[];
}
export function getNetworkInfoOutput(args: GetNetworkInfoOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNetworkInfoResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("svmkit:networkinfo:getNetworkInfo", {
        "networkName": args.networkName,
    }, opts);
}

export interface GetNetworkInfoOutputArgs {
    networkName: pulumi.Input<enums.solana.NetworkName>;
}
