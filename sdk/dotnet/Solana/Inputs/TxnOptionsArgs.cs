// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ABKLabs.Svmkit.Solana.Inputs
{

    public sealed class TxnOptionsArgs : global::Pulumi.ResourceArgs
    {
        [Input("blockHash")]
        public Input<string>? BlockHash { get; set; }

        [Input("commitment")]
        public Input<string>? Commitment { get; set; }

        [Input("feePayer")]
        private Input<string>? _feePayer;
        public Input<string>? FeePayer
        {
            get => _feePayer;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _feePayer = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("from")]
        private Input<string>? _from;
        public Input<string>? From
        {
            get => _from;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _from = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("keyPair")]
        private Input<string>? _keyPair;
        public Input<string>? KeyPair
        {
            get => _keyPair;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _keyPair = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("nonce")]
        public Input<string>? Nonce { get; set; }

        [Input("nonceAuthority")]
        public Input<string>? NonceAuthority { get; set; }

        [Input("signer")]
        private InputList<string>? _signer;
        public InputList<string> Signer
        {
            get => _signer ?? (_signer = new InputList<string>());
            set => _signer = value;
        }

        [Input("url")]
        public Input<string>? Url { get; set; }

        [Input("withComputeUnitPrice")]
        public Input<double>? WithComputeUnitPrice { get; set; }

        [Input("withMemo")]
        public Input<string>? WithMemo { get; set; }

        [Input("ws")]
        public Input<string>? Ws { get; set; }

        public TxnOptionsArgs()
        {
        }
        public static new TxnOptionsArgs Empty => new TxnOptionsArgs();
    }
}
