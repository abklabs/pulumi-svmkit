// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace ABKLabs.Svmkit.Deletion
{
    [EnumType]
    public readonly struct Policy : IEquatable<Policy>
    {
        private readonly string _value;

        private Policy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        /// <summary>
        /// Do not delete files upon destroying their associated component
        /// </summary>
        public static Policy Keep { get; } = new Policy("keep");
        /// <summary>
        /// Delete files upon destroying their associated component; if the files exist before the component is created, will throw an error
        /// </summary>
        public static Policy Delete { get; } = new Policy("delete");
        /// <summary>
        /// Delete files upon destroying their associated component, and overwrite existing files on creation â€” use with caution
        /// </summary>
        public static Policy Delete_and_force_creation { get; } = new Policy("delete-and-force-creation");

        public static bool operator ==(Policy left, Policy right) => left.Equals(right);
        public static bool operator !=(Policy left, Policy right) => !left.Equals(right);

        public static explicit operator string(Policy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is Policy other && Equals(other);
        public bool Equals(Policy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
