// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ABKLabs.Svmkit.Geyser.Outputs
{

    [OutputType]
    public sealed class GrpcConfigGrpc
    {
        public readonly string Address;
        public readonly int? ChannelCapacity;
        public readonly Outputs.GrpcConfigGrpcCompression? Compression;
        public readonly Outputs.GrpcConfigFilterLimits? FilterLimits;
        public readonly int? FilterNameSizeLimit;
        public readonly string? FilterNamesCleanupInterval;
        public readonly int? FilterNamesSizeLimit;
        public readonly int? MaxDecodingMessageSize;
        public readonly int? ReplayStoredSlots;
        public readonly bool? ServerHttp2AdaptiveWindow;
        public readonly string? ServerHttp2KeepaliveInterval;
        public readonly string? ServerHttp2KeepaliveTimeout;
        public readonly int? ServerInitialConnectionWindowSize;
        public readonly int? ServerInitialStreamWindowSize;
        public readonly int? SnapshotClientChannelCapacity;
        public readonly int? SnapshotPluginChannelCapacity;
        public readonly Outputs.GrpcConfigGrpcServerTLS? TlsConfig;
        public readonly int? UnaryConcurrencyLimit;
        public readonly bool? UnaryDisabled;
        public readonly string? XToken;

        [OutputConstructor]
        private GrpcConfigGrpc(
            string address,

            int? channelCapacity,

            Outputs.GrpcConfigGrpcCompression? compression,

            Outputs.GrpcConfigFilterLimits? filterLimits,

            int? filterNameSizeLimit,

            string? filterNamesCleanupInterval,

            int? filterNamesSizeLimit,

            int? maxDecodingMessageSize,

            int? replayStoredSlots,

            bool? serverHttp2AdaptiveWindow,

            string? serverHttp2KeepaliveInterval,

            string? serverHttp2KeepaliveTimeout,

            int? serverInitialConnectionWindowSize,

            int? serverInitialStreamWindowSize,

            int? snapshotClientChannelCapacity,

            int? snapshotPluginChannelCapacity,

            Outputs.GrpcConfigGrpcServerTLS? tlsConfig,

            int? unaryConcurrencyLimit,

            bool? unaryDisabled,

            string? xToken)
        {
            Address = address;
            ChannelCapacity = channelCapacity;
            Compression = compression;
            FilterLimits = filterLimits;
            FilterNameSizeLimit = filterNameSizeLimit;
            FilterNamesCleanupInterval = filterNamesCleanupInterval;
            FilterNamesSizeLimit = filterNamesSizeLimit;
            MaxDecodingMessageSize = maxDecodingMessageSize;
            ReplayStoredSlots = replayStoredSlots;
            ServerHttp2AdaptiveWindow = serverHttp2AdaptiveWindow;
            ServerHttp2KeepaliveInterval = serverHttp2KeepaliveInterval;
            ServerHttp2KeepaliveTimeout = serverHttp2KeepaliveTimeout;
            ServerInitialConnectionWindowSize = serverInitialConnectionWindowSize;
            ServerInitialStreamWindowSize = serverInitialStreamWindowSize;
            SnapshotClientChannelCapacity = snapshotClientChannelCapacity;
            SnapshotPluginChannelCapacity = snapshotPluginChannelCapacity;
            TlsConfig = tlsConfig;
            UnaryConcurrencyLimit = unaryConcurrencyLimit;
            UnaryDisabled = unaryDisabled;
            XToken = xToken;
        }
    }
}
