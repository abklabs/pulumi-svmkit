// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ABKLabs.Svmkit.Validator
{
    [SvmkitResourceType("svmkit:validator:Firedancer")]
    public partial class Firedancer : global::Pulumi.CustomResource
    {
        [Output("config")]
        public Output<ABKLabs.Svmkit.Firedancer.Outputs.Config> Config { get; private set; } = null!;

        [Output("connection")]
        public Output<ABKLabs.Svmkit.Ssh.Outputs.Connection> Connection { get; private set; } = null!;

        [Output("environment")]
        public Output<ABKLabs.Svmkit.Solana.Outputs.Environment?> Environment { get; private set; } = null!;

        [Output("keyPairs")]
        public Output<ABKLabs.Svmkit.Firedancer.Outputs.KeyPairs> KeyPairs { get; private set; } = null!;

        [Output("runnerConfig")]
        public Output<ABKLabs.Svmkit.Runner.Outputs.Config?> RunnerConfig { get; private set; } = null!;

        [Output("systemdServiceName")]
        public Output<string> SystemdServiceName { get; private set; } = null!;

        [Output("variant")]
        public Output<ABKLabs.Svmkit.Firedancer.Variant?> Variant { get; private set; } = null!;

        [Output("version")]
        public Output<string?> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Firedancer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Firedancer(string name, FiredancerArgs args, CustomResourceOptions? options = null)
            : base("svmkit:validator:Firedancer", name, args ?? new FiredancerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Firedancer(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("svmkit:validator:Firedancer", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/abklabs",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Firedancer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Firedancer Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Firedancer(name, id, options);
        }
    }

    public sealed class FiredancerArgs : global::Pulumi.ResourceArgs
    {
        [Input("config", required: true)]
        public Input<ABKLabs.Svmkit.Firedancer.Inputs.ConfigArgs> Config { get; set; } = null!;

        [Input("connection", required: true)]
        public Input<ABKLabs.Svmkit.Ssh.Inputs.ConnectionArgs> Connection { get; set; } = null!;

        [Input("environment")]
        public Input<ABKLabs.Svmkit.Solana.Inputs.EnvironmentArgs>? Environment { get; set; }

        [Input("keyPairs", required: true)]
        public Input<ABKLabs.Svmkit.Firedancer.Inputs.KeyPairsArgs> KeyPairs { get; set; } = null!;

        [Input("runnerConfig")]
        public Input<ABKLabs.Svmkit.Runner.Inputs.ConfigArgs>? RunnerConfig { get; set; }

        [Input("variant")]
        public Input<ABKLabs.Svmkit.Firedancer.Variant>? Variant { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public FiredancerArgs()
        {
        }
        public static new FiredancerArgs Empty => new FiredancerArgs();
    }
}
